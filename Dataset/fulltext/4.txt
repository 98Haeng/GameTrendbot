제목: [NDC] Microsoft, Blizzard 그리고 Nexon 에서는 어떻게 개발하나요?

네 안녕하세요 박정순 입니다 ndc 에는 2년만에 돌아왔네요 매년 하고 있었는데 작년에 일이 있어서 못 왔는데 올해 다시 와서 이렇게 발표할 되니 넘 아깝습니다 올해 발표할 주제는 사실 어떻게 보면 체크 한건데요 어떤 제가 좋아하는 책을 읽고 그 책에서 받았던 인 사이트들을 좀 정리해서 그리고 제가 일했던 직장 들에 대한 이야기를 섞어 가지고 좀 3가지 회사를 비교해보는 그런 이야기를 가지고 돌아왔습니다 그래서 제목은 마이크로소프트 블리자드 그리고 넥슨에서 어떻게 개발 하나요 이런 주제를 가지고 다뤄볼 거고요 어 잠깐 채 소개를 하면 어 머 항만 컴퓨터에서 거 1세대 개발자 줘 그래서 지금 25년째 개발을 하고 있습니다 굉장히 오랫동안 버티고 있죠 여러분도 또 열심히 하셔서 25년 뻣뻣해 보시기 바랍니다 어쨌든 아래 한글을 만들어 썼고 미국으로 옮겨 가서 거기서 스타터 벤처를 한두개 정도 있었구요 그리고 블리자드의 들어가서 한 12년 정도 일을 했습니다 블리자드에서 오랫동안 일을 했었고 거기서 일했던 경험을 바탕으로 좀더 다양한 프로젝트를 하고 싶었는데 마침 넥슨에서 연락이 와서 넥슨의 와서 한 2년 전부터 이렇게 글로벌 플랫폼 이런걸 많이 개발을 하고 있습니다 그래서 그러다보니 슬라이드도 좀 영어로 되어있는데 저는 개발 저한테 뭐가 제일 중요하냐 무슨 냉기가 제일 중요하냐 물어보면 보통 모시풀 뿌린 야모 파이터 니 아 그게 아니라 영어라고 이야기해요 사실 이 업계에서 살아남으려면 영어가 제일 중요하다고 생각합니다 그렇기 때문에 여러분들의 학습 능력 향상을 위해서 영어로 돼 있으니까 근데 쉬운 영화니까 전혀 이해 하 신 데 지장 없습니다 어 이 책이 사실 오늘 메인 주제에 요 그래서 말려 책을 읽어 보신 분이 있다면 굉장히 와 닿을 텐데 제 평생의 읽어본 책 중에 제일 저는 개인적으로 좋아했던 책이예요 그래서 제목이 하드 코드 라는 책인데 그냥 소프트웨어 라는거 에서 이렇게 힌트로 말을 바꿔서 그냥 쓴 거예요 근데 지은이 제목이 재밌죠 il y 내가 옳다 라는 이야기 이거든요 그래서 약간 작가가 자기가 옳다는 이야기를 막 적어낸 그래서 이 작가가 무슨 일을 하는 사람이 한다면 마이크로소프트 내에서 혁신 팀 이라는 게 있었어요 뭐 프로세스의 혁신 팀 그래서 각 팀들이 일을 하는데 힘든 게 있으면 리뷰 해주고 도와주고 그래서 결국 마이크로소프트 전체로 이렇게 혁신 시키는 팀 으로서 굉장히 힘든 팀 이었는데 그 팀의 어떻게 이제 it's 분이 뭐 팀장 같은걸로 일을 하시면서 10년이 넘도록 마이크로소프트 내부 프로세스를 개선하기 위해서 노력했던 그 경험들을 그리고 그때 썼던 이제 칼럼들을 모아서 책으로 된 거예요 그러니까 거의 마이크로소프트가 이렇게 했다 라든가 아니 왜 이렇게 하고 싶다 그런 것들이 쪽 좋겠어요 그래서 챕터 내용을 뜯어보면 어려운 애들이 많죠 그래서 프로젝트 매니지먼트 그 다음에 뭐 프로세스의 개선 효율성 협업해 품질 소프트웨어 디자인 거기에서 이제 그 캐리어 관리 거기서 개인 자기개발 거기에 관리자는 어떻게 해야 되는건가 결국 조직은 또 쪽으로 가야 되는거 굉장히 큰 주제로 10개를 나눠서 다양한 그 사람이 쓴 칼럼 들이 있어요 그래 쭉 한번 읽어 보시면 굉장히 도움이 되고 사실 한글판도 나와있어요 이 책에 나와 있는 내용과 그리고 제가 불이 자태 이랬던 거 그리고 지금 네트를 이랬던 거 이걸 다 같이 비교해 보는 그런 시간이 되도록 하겠습니다 그래서 여기서 이제 경주 이상을 줘야 당연히 여기에 나와있는 내용이 당연히 마이크로소프트의 모든 거하고 1채 싼 거 요 블리자드 하고 일치하지 않고 104 괜찮아요 이런 식으로 하고 싶다 라든가 이런식으로 목표 했다 그래서 여러분들이 이쪽 방향으로 하면 당연히 좋은 거죠 네 하지만 여기 나와 있는 이야기를 여기 있는 회사들이다 한다고 생각하지만 되요 2 조직 이라는 게 항상 좀 좋아졌다가 문제가 생기면 자는 나빠졌다 그런 거거든요 왔다갔다 하는 거에요 심지어 저같은 경우에는 뭐 블리자드에서 는 오랫동안 이라면서 다양한 팀 을 경험했고 마이크로소프트는 뭐 주변에 정보라 dg 책을 통해서만 입수 했지만 맥스는 사실 2년 반 정도밖에 안되요 게다가 제가 일단 조직이 또 한국에도 있고 미국에도 있고 또 장기간 미국의 있다보니까 어느 한 조직의 사실 국한돼 이야기 수도 있는데 어쨌든 이 컨셉 자체는 굉장히 좋은 거고 그리고 이런 방향으로 가는 것 자체는 당연히 옳다고 생각하는 거 거든요 그래서 2 이렇게 이 회사들이 돌아간다고 생각만 안하시면 이 방향으로 간다고 만 생각하시면 되게 좋은 정보가 될 거라고 믿습니다 그리고 제일 중요한 것은 지금부터 나는 내용들이 뭔가 어마어마한 게 있는 게 아니에요 예를 들어서 뭐 서울대 수석 합격한 사람 한테 어떻겠냐 물어보면 뭐 교과서 대로 공부했다 그러잖아요 사실 그게 진짜 아까 팩트 베이직 이거든요 언제나 기초에 충실한 게 일을 제일 잘할 수 있는 걸 여기 나오는 내용도 대부분 다 아는 내용인데 그 않은 내용을 실천을 하기가 어려운 거죠 이 자리를 통해서 다시 한번 이런 것들을 좀 리마인드 해서 여러분들 좀 생각해 보는 시간을 가졌으면 좋겠습니다 첫번째 제일 첩부 마이크 속도 고민하게 뭘까요 당연히 거기도 이제 스케줄 부터 고민을 해요 스케줄 잡기가 이렇게 어려운 거죠 그래서 스케줄은 당연히 예상하기 힘들다 이걸 인정하고 들어가는 거예요 스케줄을 얘들은 석달만에 끝난다 라고 말을 하고 석 달 만에 끝낼 수가 없어요 건 당연한 거죠 그래서 굉장히 스케줄 잡기 넣었다 그렇다 보니까 그 스케줄 안에서 꼭 해야될 일과 했으면 좋은 일과 우리가 하고 싶은 일 이렇게 세 가지로 나누는 게 제일 중요하죠 이게 우선 수준이죠 그래서 꼭 해야 될 일을 당연히 해야 되는 거고 뭐 하면 좋은 이런거에 해도 되고 안해도 되고 했으면 좋은 일은 하면 안되죠 그거 할 정도 시간이 안 되거든요 그래서 이런 기초적인 걸 해야 되는데 이런 걸 자라는게 당연히 피해 미 줘 저는 개인적으로 조직의 꼭 pm 있어야 된다고 보고 2pm 들이 그런 결정을 옆에서 도와줘서 2 품질 위주로 갈 거냐 아니면 뭔가 온타임 시간에 맞춰서 끝낼 거냐 이런 것을 결정하는 것 옆에서 도와줄 수 있어야 되는 거죠 단순하게 개발자들 마 있다보면 이런 그 우선순위 결정 하는 게 좀 힘들어요 왜냐하면 내 머리속에 중요하다고 생각했기 때문에 옆에 pm 들이 있으며 등을 많이 도와줄 수 있어서 특히 마이크로소프트는 pm 조직이 굉장히 강해요 그리고 그쪽에서 관리도 많이 하고 있고 이런 식으로 그 마이크로소프트도 일정 관리가 어렵다는 걸 인지하고 굉장히 많은 p & 를 데리고 우선순위를 정하는 데 공을 많이 들이는 거죠 반면에 블리자드 같은 경우에는 좀 독특한데 뭐 아시겠지만 그냥 거기는 품질의 우선 중에 품질 그 게임 재미 있을 때까지 계속 만드는 거죠 아까 일정 뭐 깨져 독해서 가는거죠 뭐 안 좋다고 생각합니다만 어쨌든 좋은 게임을 만드는 데는 도움이 되죠 대신에 그 안에는 베테랑들이 많아요 아주 오랜 기간 개발한 사람들이 그러다 보니까 이 사람들이 이렇게 이거 한달 좀 걸릴 거 같애 가면 대부분 한 달 걸리는 거예요 여러분들이 일할 때도 좀 이렇게 시니어 개발자들 올해 경험이 있는 사람들하고 일하다 보면 일정 잡기가 쉽지 않아요 그만큼 그 사람들은 경험이 있으니까 이런 경험으로 더 커버를 하죠 하지만 이렇게 품질에 집중하고 아무리 베테랑들이 많아도 계속 이렇게 하다 보면 아시다시피 이제 게임 시장의 너무 급변하고 있잖아요 4부작 또 계속 그렇게 힘들거든요 그래서 최근 몇 년 사이에는 마이크로소프트에서 의외로 사람들만이 데려왔어요 그래서 마이크로소프트에서 온 사람들의 방금 위에서 이야기했던 뭐 pm 이 더 강해진다 등 가 우선순위를 더 집중 한다던가 그런 프로세스를 많이 도입을 하고 있어요 그래서 이제 좀 더 체계적으로 어 목표하는 시간 내에 게임을 출시해 보자 해서 조직의 사실 변화가 있고 그런 것도 참 의미있는 일인 것 같아요 넥슨 같은 경우에는 zx 플랫폼 제가 있는데가 플랫폼 있기 때문에 이제 플랫폼의 관련된 얘기하면 저희 x 플랫폼에서도 상당히 의 피해 미 있고요 fpm 들 중에 뭐 블리자드에서 심지어 모션 분들도 있고 이런 분들이 이제 열심히 이렇게 프로젝트 관리를 하고 또 애자일 프로세스 그래서 작게 빨리빨리 만들면 일정 보는걸 하고 최근 제일 많이 하고 있는 제가 좋아하는 컨셉인데 mvp 라고 모스트 밸리 오브 퍼스에 약자가 아니라 미니멈 바이블 프로젝트라고 가장 작게 동작할 수 있는 플렉스 를 만드는 거죠 그렇죠 앞의 그림에서 보시다시피 이렇게 다 만들어서 완성해서 내는 것도 아니고 그렇다고 10% 를 동작 안하는 걸로 내는게 아니라 모든 필요한 것을 조금 조금 조금 에서 10% 로 완성해야 되는 거죠 그래서 이런 mvp 라는 개념으로 3주 마다 하나씩 제품을 조금씩 조금씩 내는 거예요 그래서 뭐 런처 를 개선한다고 그러면은 기능 1 게서는 내고 또 개선해 내고 이런식으로 1년 동안 뭐 10번 이상 출시하면서 개선을 하는 거죠 1년 동안 다 개발 수시 하는게 아니라 그래서 이 mvp 라는 컨셉이 사실 일정을 3대 굉장히 중요하고 또 저희 같은 경우에는 이 열리 1년차 리 계획을 세우고 또 커틀릿 3 3개월마다 계획을 세우고 그걸 계속 리뷰를 해요 그래서 항상 없듯 a 스케줄 지금부터 3개월 동안 뭐를 하는지 지금부터 1년을 뭘 하는지 그런 계획을 세우고 그걸 안 해석에서 업데이트를 하죠 그래서 항상 업데이트 돼 있는 계획이 있는 것도 중요해요 얘 이름은 1 년 연초에 세운 계획을 연말까지 그대로 가지고 있는 것은 굉장히 위험하죠 당연히 그 계획을 계속 리뷰하고 업데이트 하는 그런 프로세스를 가지고 있습니다 자 이렇게 일을 해야되는데 일을 하는데 일정이 느려지는 이유는 뭘까요 대부분 사실 제일 큰건 앙대요 낭비 뭔가 낭비가 들어가는 거죠 그런 걸 낭비를 막기 위한 게 사실을 애 자이링 거잖아요 그래서 그 낭비라는 측면을 좀 깊게 봐야 되는데 그건 알면서도 실천하기 힘든 거에요 그래서 대표적으로 유명한 낭비 드리죠 이게 애니죠 필요없는 기능을 맡는다 든가 아니면 개발 과정이 좀 느린 다던가 얘만 빌드하는 데 필드 서버가 막 1시간 걸려서 비즈 한다든가 아니면 이 거야 먼트 요구 조건 자체가 불투명한 거에요 열심히 만들었던 e 가 아니라 그러고 별아 크리스 이렇게 정치가 황하 줘 뭐 어느 조직이나 마찬가지죠 좀 줘 정치적으로 어떤 결정을 해서 진행하다보면 좀 느려지는 거고 그리고 이렇게 슬로우 커뮤니케이션 안에서 의사소통을 만나서 말로 하면 될 것을 굳이 이메일로 하면서 막 메신저 로 하면서 기다리면 되게 느려지는 거죠 이런 여러가지들이 합쳐져서 사실 진행 속도를 느리게 하는 거고 거기서 벌어지는 것들이 일정을 느리게 하는 거죠 그래서 마이크 속도에서도 이런걸 이렇게 집중을 하기 때문에 오른쪽에 보시는 뭐 플랜 2 체크 앱 트이게 일에 기본 개념 중의 하나인데요 계획을 세우고 실천을 하고 그게 잘 되고 있는지 확인을 하고 그 확인한 결과를 바탕으로 다시 액션을 하는 걸 결국 빛의 빨기를 계속 도는 거예요 계획을 세우고 하고 체크하고 고치고 이걸 계속 빨리 빨리 하는게 최고의 방법인 거죠 이런 것을 많이 하려고 노력하고 있고요 그래서 저희가 겉보기에는 느린 것 같아도 마이크도 안에서 일하시는 분들 이야기를 들어보면 굉장히 그 안에서 빠르게 돌고 있어요 4 제품에 크기가 워낙 크다 보니까 이제 밖에서 볼 때는 느려 보이는 거죠 그래서 뭐 마크 소프트가 윈도우 세븐 출시하고 축하할 때 카페 체육관에 그 개발자들을 다모아 때요 개발자들이 7만명 상상이 가세요 7만명의 한 제품을 만들 수가 있어요 근데 농담에 이런게 있어요 아까 100명이 할 수 있는 일을 천명하고 이렇게 점점 늘어나 잖아요 근데 이게 는 7만 명이 면은 웨스트가 들어가요 당연히 그 안에 뭐 한 판 정도로 웨스트 라고 생각을 하는데 반대로 천명이 민도로 만들 수 있을 거야 그건 아니잖아요 그러다 보니까 업소 수십 만 명의 만들어야 되는데 만명이 만들면 웨스트가 들어갈 수 밖에 없죠 그걸 다시 관리하다 보면 조직은 다시 커지는 거고 그런 식으로 조직이 커지면 커질수록 낭비가 있지만 그 낭비 까지도 관리 대상으로 잡았을 때 사실 큰 프로젝트 할 수 있는 거죠 요즘 문제 게임도 작은 팀들이 개발을 하기도 하지만 큰 짐들이 개발 하잖아요 4팀이 커지면 커질수록 힘들어져요 이런 쪽에 대한 고민을 평소보다 더 많이 해야 됩니다 블리자드 같은 경우에는 다 주세요 이런 것 사실 잘 생각 안 해요 그냥 게임이 재미있으면 되니까 열심히 게임 이나 만들자 뭐 이런 생각으로 가서 메이스를 이렇게 없애자고 누르고 많이 안하고 대신 아까 이야기 sc 베테랑들이 많기 때문에 되게 좀 플렉서블 해요 그리고 이제 환경에 잘 적응하고 그러니까 사람들이 그냥 그 상황에 맞춰서 적당히 빨리 움직이면서 하기 때문에 약간 진짜 이를 따르지 않 하지만 거의 세미 아이젤 식으로 일을 많이 해요 그래서 어 잘하는 사람들이 가 열심히 하는 그러면 게임이 재미있을 때 까지 하는 그런 측이 라 이런 프로세스는 그동안 안썼는데 아까 말씀드렸다시피 마이크로소프트 이제 프로세스가 들어오면서 요즘은 계속 바뀌고 있어요 그래서 이제 제가 볼 때는 앞으로 많은 회사들이 이런 좋은 프로세스를 좀 좋지 않을까 옛날 시계 프로세스를 안쓰고 그냥 밖에 받아 신어도 시작하지 않을까 여기서 제가 이제 미국에서 그 일을 하면서 미국 사람들이 모자 긴 애들은 뭐 린을 쓴다 뭐 스크럼을 쓴다 먹 한 반을 쓴다 제가 한국에 있었을때 멀더 한번 컴퓨터 그런데 다녔을 때 무슨 방법론을 썼냐 물어보면 제가 할 말이 없잖아요 우리는 그 장막이 됐으니까 뭔가 지어서 되다 보고 싶어서 나는 피스트 나이나 일하는 방법을 썼다 주목 국으로 개발에 따라 이렇게 있어보이게 그래서 피스트 나 인한 fnn 이라는 방법론으로 개발했다고 해주죠 그리고 잭슨 에서는 저희는 지금 3주에 한번 이제 제품을 출시하면서 흐름을 돌리고 있고요 매 스크럼 애자일 하고 있고 그리고 컴 플러스 낮이라 당연히 이거 다 살아야죠 콤플렉스 아시아 같은 너의 데이터 같은거 다 놓고 태스크 닫고 관리하고 당연히 컨텐츠인 택을 에어컨 트렌스 딜리버리 이런 시스템 구축에서 빠르게 돌아갈 수 있도록 그래서 업계에서 쓰고 있는 르 이런 표준 들은 최대한 많이 따라준 게 좋아요 그리고 우리 팀이 작은 되는 거다 해야되냐 제가 볼땐 다 해야되요 문서 작업도 하셔야 되고 멋이 아니라 시디 이런거 고민 하셔야 되고 모습 그럼 이런 거다 생각하셔야 저런 웨이스트 를 없앨 수가 있는 거예요 그리고 제일 중점적으로 저희가 하고 있는 것은 사실 개발환경에 투자를 많이 해요 속도를 내기 위해서는 개발환경이 중요하거든요 그래서 뭐 브랜치를 어떻게 할 거냐 뭐 개발자들이 환경 어떻게 될 거냐 심지어 테스트 환경은 뭐냐 그래서 신씨 하게 그 개발 하는거 말고 그 뒤에 있는 - & 환경까지 또 생각 많이 써서 뭐 비주얼 수도 들었을 거야 멋을 쓸 거냐 우리가 뭐 소스 컨트롤 무슨 투르 싫 거야 그래서 둘이 라든지 뭐 환경 이라든지 배포 라든지 그래서 순수 개발 이외의 나머지 에 투자를 많이 줘요 그래야 개발자들이 편하게 말할 수 있어요 막말로 개발자들이 엄청 느린 기계에서 op 맞이 안된 뭐 게임을 빌드하는 데 1시간이 걸린다고 밀어 할 수가 없잖아요 당연히 제일 빠른 기계에서 제일 좋은 둘로 제일 빠르게 빛을 해야 되죠 그래야 낭비가 다 사라지는 거고요 그런데도 투자를 많이 하고 있습니다 이렇게 하면 이제 웨이스 가만히 사라지냐 사실상 어조 직에서 즉 가장 큰 웨이스트 는 사실 미팅 이에요 안타깝지만 왜냐면 이게 한 명이 모이는 게 아니잖아요 뭐 여기도 지금 많은 분들이 오셨는데 제가 여기서 1시간 내내 차원 소리만 하면 이 많은 사람들의 시간을 낭비하는 거잖아요 오늘은 그렇지 않기를 바라겠습니다 어쨌든 이렇게 미팅을 하면 여러 사람들이 모여 가지고 있는데 쓸데없는 소리 하면 그만큼 시간이 남게 되는 거에요 위험하죠 그래서 마이크로소프트에서 는 미팅을 이제 3가지 타입으로 않아서 이렇게 결정을 하기 위한 미팅이나 아니면 정보를 나누기 위한 미팅 냥 아니면 의논하기 위한 미팅 이냐 딱 9분을 해요 그래서 결정을 하기 위한 미팅 이면 사람들이 미리 고민을 해서 와야 돼요 그 결정을 하기 위해서 고민 하지 않는 사람은 그 미팅 올 필요 없어요 전부터 그렇잖아요 결정에 참여할 사람들 먹어야죠 그리고 정보를 나누기 위한 미팅은 대부분 메일러 가능해요 그냥 레이로 이제 빨리 문제죠 뭐 질문 있으면 답변 하면 되는거고 브레인스토밍 은 제 생각을 막 서로 토론 하는건데 이것은 사실 준비 안하고 와도 되요 이것은 와서 막 들으면서 사람들께 막 던지는 회의 라 고민 안해도 되고 대신 로이스터 매운 가능하면 모든 사람이 다 참여 해야죠 아무리 말단이 나 머신이 알아 모든 사람이 다 모여서 맘먹고 막 떠드는 이것이 나지 않 없이 그런 식으로 브레인스토밍을 해주는게 좋구요 어쨌든 이런 미팅의 타입을 나눠서 9분해서 이게 꼭 필요한 미팅 인가 이렇게 고민하는 게 필요하고 그리고 이 미팅을 돌리는데 도색한 규칙을 쓰라고 의 마이크 소프트 에서는 그래서 어 및 이브 적음을 좋을 수록 좋아요 미팅 횟수가 적어도 좋고 미팅 시간이 짧아서 좋고 미팅에 들어오는 사람 수가 적어도 좋아요 이게 다 포함되는 거예요 제일 적은 사람들이 모여서 제일 짧은 시간에 미팅을 하고 그 미팅 마저도 적은 게 좋다 이게 사실 기본 컨셉으로 생각하고요 그리고 한 미팅에서 는 여러 가지 주제를 다루고 안되요 하나하나 해야 되는거죠 그래서 하나 하고 그걸 끝내고 나서 두 번째 미팅 뭐 두 번째 주제로 넘어가는게 좋습니다 고 제일 중요한 것은 85b 줘 그 미팅에 대한 내용을 살 업에서 그 미팅에서 결정 난 것들이 꼭 전파가 되게 그 빌딩 에서 나눠진 정보들이 사람들 전파가 되게 8 법을 하지 않으면 사실 미팅이 베이스가 되는 거에요 미팅 자체가 웨스트가 아니라 85b 없어서 있을 때는 계실 많죠 그래서 뭐 인터넷 보시면 아마 이거 찾아 보신 분들이 있을텐데 cia 에서 적국을 망하게 하기 위해서 만든 매뉴얼이 있어요 적국에 가서 어떻게 그 적국을 망가뜨리는 데 굉장히 않을래요 미팅에 들어가서 쓸데없는 질문 많이 하라 이미 결정 난 걸을 다시 물어 봐라 그리고 전혀 엉뚱한 질문 계속 해라 단단히 이렇게 빛이 만들어 가서 회 방만 오면 그 회사는 일을 할 수가 없어요 그리고 이미 결정 하는 사람들이라고 있는데 이거 아닌것 같아 다시 미팅하자 또다시 모으고 그래서 거기 보면 많아야 스물 다섯 개 쯤 되는데 와 끔찍 하더라고 이거 다 하면 은 그래서 망하는 거죠 그렇게 대단한 나라야 이게 진짠지 아닌지는 아무도 몰라요 참고로 이런거 가 있을 만큼 미팅에 이제 회사의 끼치는 영향이 많은 거죠 그래서 블리자드 같은 경우에는 이런거 때문에 어떤 개발팀 같은 경우에는 노 미팅 데이 라는 것도 심지어 만들었어요 그래서 그 개발팀은 아예 그날은 빛을 안 하는 거지 엔터 목요일은 미팅이 없어요 아예 그래서 개 발짝도 맘 편하게 그날은 하루종일 개발 말할 수 있도록 해주면 좀 마음 편하죠 근데 하루쯤 미팅 안해도 조직 돌아가요 사실 그걸 이제 다른 날로 미루면 되는 거죠 그래서 노 미팅 데이 같은 것은 한번 너무 미팅이 많다고 사람들이 이렇게 하면 방법을 써보는 것도 좋을 것 같아요 그래서 저희 넥슨 같은 경우에는 애드온 미팅 이라고 실제 이제 포멀한 미팅을 잡는게 아니라 필요할 때 그냥 그냥 해요 빨리 빨리 그래서 앞에 복도에 서서 두 명의 막 떠들고 결정을 하고 이런 식으로 그래서 간단한 미팅을 많이 하고 또 말씀드렸듯이 피해 미만 있다고 했잖아요 급히 힘들이 미팅을 대부분 대신 참여해서 결정을 많이 내려 줘요 대신 피한 들한테 또 권한을 줘야 되는 거죠 그리고 뭔가 이제 팔로우 할 깨짐 해야 되는 거고 그래서 미팅을 줄이려고 많이 노력하고 뭐 말씀드렸던 컴플라이언스 낮이라 같은 게 사실 미팅을 줄이는 데 굉장히 많이 도움됩니다 그래서 모든 것을 사실 임의로 하시지 마시고 가능한 컴포넌트 하고 지라 로 빠지 이메일은 정말로 정말로 최소한 소스 코드 라모 커멘트 나 뭐 데일리 빌드 라커 플러스 라지 라 이런 툴을 써야지 이메일 자체가 시대적으로 너무 오래 된 거에요 예를 들면 뭐 삼사십 년 전에 만들어 놓은 거라 요즘에 비해서 굉장히 많은데 떨어지죠 뭐 순례기 라든지 이런 것은 건 훨씬 좋죠 이메일 보다 훨씬 더 효율적이고 쉐어 더 잘되고 이런 슬랙 인한 컴퓨터 지라 이런걸 썼을 때 엔딩을 만 줄일 수 있습니다 위클리 리포트 라고 각 팀별로 주간 보고서 로 굉장히 잘 써요 지금 우리가 진행하는 건 뭐고 뭐 이건 어떤 문제가 있고 뭐 이런식으로 자 보는 사람 입장에서 굉장히 정리를 잘해서 이미 컴플라이언스 에도 사실 그 위클리 리포트 가 있는데 그걸 다시 한 번 포맷팅 을 해요 이런거를 외부의 소통을 해서 사실 미팅이 필요 없이 모든 정보가 공유될 수 있도록 만들 줘 그래서 이렇게 미팅을 줄이면 그거 갖고 다 되느냐 그렇지 않아요 왜냐하면 결국 이제 협업 인거 자라 미팅을 하기 위한 게 협업을 할 때 제일 문제가 이제 사실 그 직군을 길에 협업이 젤 어려워요 사실 개발자들 끼리 논의하는 것은 좀 식히고 날 수 있어요 근데 개발자 랑 pm 이나 개발자 q&a 논의할 때는 좀 더 오래 걸리죠 그래서 개발자와 q&a 가 사실 제일 많이 부딪치는 거라 그거에 대해서 이제 좀 깊게 다뤄 볼 건데 어 마이크 소프트 에서는 좀 2a 에 가치를 좀 높게 처지기 해서 굉장히 도록 많이 해요 왜냐하면 은 이 두개가 다르다는 거죠 처음부터 q&a 하고 개발자 그러니까 특히 그런거 많잖아요 저사람은 개발 못하니까 교회 그랬어 굉장히 잘못된 생각입니다 그 생각을 가지는 개발자들은 정말 생각을 바꿔야 돼요 q&a 에 전문성과 미래와 그 제품의 기여하는 바를 정확히 이해를 하고 또 그런 교회를 뽑고 그렇게 투여는 트랙 해야 되는 거죠 그래서 마이크로소프트에서 는 왜 q&a 가 파트로 로써 개발자의 파트너로서 중요한 사람인가 했을 때 세 가지를 보는데 첫 번째는 무조건 개발자가 만든 솥에 뭐가 있어요 버그가 없을 순 없어요 무조건 뭐가 있기 때문에 우린 q&a 가 필요하고 두번째는 게 품질을 통해 라 그러는데 예를 들어서 개발 저한테 이거 주시할 수 있어 그러면 개발자 당연히 다 됐어 주시할 수 있어 그렇죠 근데 안 돼요 그러면 qna 이렇게 말하겠죠 우리가 지난 한 달 동안 뭐 버그를 350개 찾았고 그 중에 리가 270개 를 찾았으며 지금 테스트와 버그 발견 속도로 볼 때 앞으로 2주 동안 모바일 정도 나올것 같고 뭐 한달 반쯤 시라면 모두 보가 부숴질 것 같다 결국 무슨 일기예보 하듯이 사실 숫자로 보여줘야 되는 거거든요 그리고 기능적으로도 사람들이 제일 많이 쓰는 기능의 이만큼의 보고가 있었고 이만큼 고쳤고 그래서 의외로 어떤 쏙 들어 있는데 거기가 버그가 참기가 나오고 900개로 붙였어요 그게 좋은 소프트웨어 까요 아닌 버그가 100개가 나오고 9 10 개를 고쳤으면 좋을 거예요 그 수치적으로 둘다 90% 법으로부터 짜 나요 첫번째 제품이 훨씬 좋은 제품에 버블을 많이 잡고 버그를 많이 고치는게 그 제품의 안전성을 높이는 거죠 아 이 불로 이제 개발자 와우저 가지고 막 이상한 버그만 이는 들은 그리고 같은 버그가 계속 가시라고 다시 나오고 이건 아니에요 어쨌든 버그로 가지고 이 제품의 주시할 수 있는 퀄리티를 증명할 수 있는 사람이 큐잉 거죠 그저 같은 경우에는 제 전에 블리자드 이럴때 q 이한테 농담삼아 물어봐요 니가 이 제품에 출시할 수 있는 믿음이 몇 퍼센트 해야 되는 구절 하나로 달라고 너무 기니까 그러면 한 50% 금치 못하는 거죠 90% 홈은 아 그래 됐어 이제 고작 출시 하자 내고 그 다음에 고치면 되지 그 사람들이 이제 물어보더라 고 몇 퍼센트가 그 미니멈 이냐 그래서 는 농담으로 85% 라고 85% 제가 믿는 q&a 분들이 아 이정도면 85% 정도 앉아 하라 그러면 이제 출시하고 65% 에서 출시한 다음에 이제 포착하는 뭐 그런식으로 이렇게 수치적으로 평가할 수 있는 사람의 qn 거죠 그리고 결정적으로 제일 큰것은 q&a 는 제품에 보 컷을 해요 또 커스터머 한테 개발자는 코드의 포커스 하잖아요 내가 좀 달라 요렇게 기술이 포커스 하는 사람은 당연히 기술적으로 좋은걸 만 들겠지만 q&a 는 고객 하게 제품 에게 포커스 하기 때문에 좋은 제품과 좋은 그 사용자가 쓸 수 있는 걸 만들어내는 거죠 그래서 이런 2에도 인정해야 되는거구요 블리자드 같은 경우에도 안에 그런 의미에서 게임 죄라고 테크니컬 교회가 따로 있어요 그래서 게임 죄는 잦은 향이 게임 이재민 나만 테스트하고 테크닉을 표에는 뭐 시스템 적인 거의 게임이 모든 윈도우에 들어가느냐 os 가 작아도 돌아가는 야 보패 침을 잘 되느냐 뭐 크리스 난 나는야 뭐 비디오 프레임을 안떨어지는 야 모든 이런 기술적인 걸 체크 하는 거죠 이런식으로 전문성을 보기도 하고 그리고 근본적으로 그 블리자드는 아내 사람들이 모두 목소리가 커요 자기가 맘대로 막 말하고 또 하기 때문에 목회 이건 개발 잡은 모든 사람의 목소리 좀 들어주는 되게 좀 오픈 백 문 하기 때문에 어 이런 협업이 좀 잘 되는 편이에요 저희 같은 경우에도 이런 걸 위해서 임베디드 q&a 라고 q&a 를 뽑아서 qa 팀 있긴 한데 그 qa 팀의 q&a 를 사실 개발팀에 하나씩 다 넣어놨어요 뭐 런처 팀의 1명 뭐 개정 팀의 1명 이런식으로 그 가서 같이 앉아 있어 옆에 그래서 개발 팀들이 뭔가 회의할 때 처음부터 다시 이야기 다 듣고 어떻게 개발한 지 보고 홀 테스트 플랜 세우고 그 첨부 까지 파트너스 같이 하는 거죠 그래서 임베디드 교회가 저런 대게 좋은 툴이라고 생각하고요 그리고 좋은 이런 그 테스트를 하기 위해서는 계속 새로운 툴을 연구 해야죠 2a 쪽에도 툴이 많아요 그런 틀을 계속 발굴해서 써서 개발자들의 새로운 둘로 계속 변화 해서 이렇게 바뀌는 것 만큼 q&a 쪽도 옛날 식으로 막 하지 말고 새로운 도구들을 많이 써서 발전해 나가야 되는 거죠 요즘은 이제 qa 엔지니어 라고 이제 오토메 hd 교회 라든가 더 다양한 기회를 더 많이 하도록 해서 발전하고 있죠 그런 것들도 더 해 주려고 노력 중이고요 그래서 결국 이런 q&a 드가 이제 품질이 거든요 근데 이 품질이 그냥 소프트웨어 자체에 품질 보다 좀 더 크게 봐야 되요 그래서 왜 품질을 중요하냐 당연하죠 품질이 좋아야 시장에서 이기는 걸 에 품질을 집중해야 되는데 그 품질의 집중하기 위한 적이 있다면 이 트리플 컨셉 트라고 3가지가 막 쪽 그래서 일단 포스트 얼마나 개발진이 많이 있느냐 그 다음에 타임 얼마나 개발 시간이 많이 있느냐 스코프가 얼마나 많이 개발해야 되는데 항상 부족하죠 사람도 부족하고 시간도 부족하기 때문에 스코프를 잘 안해요 그렇잖아요 어쩔 수 없죠 그렇게 그 스코프가 짤려 나가면 잘못 달라 내면 그게 이제 퀄리티가 되는 거에요 잘 잘라야 되는데 막자 루다 보면 제일 중요한 기능들이 다 빠져서 망하는 거죠 그렇다고 뭐 사람들은 무한대로 놓고 시간을 만들어 놓으면 제일 좋겠죠 근데 그런거 할 수 있는 회사 난바 블리자드 같은 이상 하면서 말고는 어렵죠 대부로 회사는 중간에 사람도 좀 줄여야 되고 시간도 줄여서 개발해야 되니까요 요 그림에 대해서 어떻게 해야 이 품질을 유지할 수 있을 것인가 접은 사람으로 적은 시간에 제일 필요한 스코프 a 를 해서 어떻게 내 품질 유지 할 것인가 이 품질에 대한 고민을 많이 하셔야 되는데 이 찌를 다시 말하지만 그 제품 자체만 아니에요 더 깊게 생각해야 되요 예를 들면 은 그 제품의 품질 수도 있는데 그 제품 안에 있는 코드의 품질도 포함 되는거구요 그리고 그 코드를 테스트 할 수 있는 테스팅 툴 그리고 이 제품을 사람한테 고객지원 않은 고객지원팀 그리고 만약에 요즘은 이제 게임 같은 것도 막 실행하다 그러시다면 작용 자체 실행 하기도 해요 제가 한때는 이제 와우 팀이랑 가지를 하는데 로그 같은걸 보다 보니까 어떤 사용자가 뭔가 방가 지나봐야 컴퓨터가 그래서 실행만 하면 클래식 안하는데 친구가 레이드 도 중이었는데 다시 계속하는 거에요 그래서 거의 30분 동안 크래시 감화 40번 난 또 끝까지 포기하지 않고 하더라고요 뭔가 참 미안 해 줘 그때 그래서 뭐 이렇게 오토 리페어 라고 뭐 그런걸 만들어가지고 하드디스크가 망가졌을 때 도 그 데이터가 이렇게 읽음 깨져 있잖아요 목 웨이터가 깨져 있는 것을 인터넷으로 바로 3 이 차를 받아서 실시간으로 고쳐서 상대와 게임을 할 수 있게 그런 것들도 만들고 했거든요 그러니까 이런 식으로 셀프 리페어 까지도 품질의 생각을 정도 넓혀야 되요 그 단순하게 코드나 제품이 아니라 사용자 경험이나 고객지원 이나 테스팅 이나 물은 개발환경 까지도 이런 모습을 합쳐서 사실 퀄리티 라고 봐야 속보가 커지는 거구요 마이크로 습도 이런식으로 집중을 많이 해요 굉장히 큰 스코프로 품질 관리를 해요 그 제품 자체가 아니라 블리자드 같은 경우에는 사실 게임에서 하고 게임만 집중하다 보니까 사실 이렇게 크게 생각안하고 그냥 게임의 많이 좀 해요 어 재밌는 것은 방금 게임 클래시 했듯이 어깨 게임이 너무 재미 있으면 막 클래식 않아도 계속해 음악이 싶어 실행하면서 그니까 도리어 품질을 올리는 것을 골고루 품질을 올리는 게 아니라 그냥 이 게임이 재미있으면 최고다 라고 다른 나머지에 시간을 쓰지 않고 고어 에 집중을 하는 그런 경험도 있죠 뭐 나쁜건 아니라고 봐요 하지만 게임이 재미있으면 그만큼 500 사이트도 좋아야 될거고 몰론 쳐도 좋아야 될거고 결제도 편해야 될거고 실제로 문제가 생겨서 고객지원 앞에 연락하면 전화도 빨리 받아야 될 거고 의무 수 많은 경험이 다 주어야 되는 거죠 뭐 친구한테 초대하고 싶은데 친구 초대도 펴야 될 거고요 그래서 이 넥센 같은 경우에는 플랫폼에서는 코드 리뷰 이걸 굉장히 중요한 생각하구요 그래 코드 리뷰를 꼭 에서 코드 품질을 보고 자동화 테스팅 도 많이 넣으려고 하코 최근에는 이제 데이터 분석 데이터 분석을 많이 놓고 있어요 그래서 모든 그 수치로 정량화 할 수 있는 것을 다 찾아서 사용자들이 어디서 어떻게 따라하는 이름을 보려고 많이 쓰고 있고 그리고 이제 기술적인 쪽에 많이 집중을 해서 테크니컬 때 기술 부채 같은 거 꼭 체크해서 백로 9 에 넣어놓고 없애려고 하고 있고 그리고 테크니컬 이벤 계속 이름 불러요 이미 나간 제품인데도 불구하고 뭐 6개월에 한번 1년에 한번은 내부적으로 그 시스템을 계속해서 해요 그래야 이제 미래를 볼 수 있으니까 그래서 여러 각도로 에게 품질의 노력을 많이 하고 있습니다 이런 품질에 대해서 논의를 할 때 사실 그 두 가지 각도로 봐야 되요 사실 제품이라는 각도 하고 기술이라는 각도로 봐야되는데 그래서 이제 미국에서는 이걸 이제 디자이너 하고 아키텍트 라고 해요 한국에서도 말하자면 그냥 기획자 하고 아키텍트 라고 할 수 있겠는데요 결국 그 제품의 기획 에 끝을 책임 사람이 한 명 있어야죠 우리 서비스는 이런 거야 우리 서비스 의 비전은 뭐야 이게 얼티밋 디자이너조 그리고 아키텍트 는 우리 시스템 이렇게 구성돼 있어 뭐 aw 있을 거야 써본 어떻게 될 거야 우리는 모고 램으로 개발 할까요 온 기술의 총책임자 줘 네 이 기술의 종 책임자와 이 제품의 총 책임자가 2명이 따로 있어야 된다는 거죠 그래 둘이 맨날 싸우면 일을 해야 되는 거고 왜냐하면 만드는 제품이 점점 더 커지고 복잡해 줘요 저희가 만드는 게임 더 옛날에는 뭐 뭐 인베이더 같은걸 한번 몇명이 만들어서 사용자도 혼자 한다면 지금은 뭐 트랑고 같은 경우에는 몇 십만 명이 동시에 분리하고 이 컴플렉스 피가 엄하게 커지고 있어요 이런걸 커버 하려면 사실 이런 식으로 전문화된 디자이너와 아키텍트가 필요한 거죠 그래서 결국 디자이너 마케터 액트 는 예를 들면 무엇을 만들 건가 어떻게 만들 것인가를 고민하는 제일 중요한 역할이 줘 그거 말고는 제외 만드는거 아 언제 만드는거 아 이건 뭐 사업이 라든가 뭐 마케팅과 이런데도 고민해야 되는 거죠 그리고 이런 그 프로젝트 디자인이라 시스템 디자인 이렇게 디자인 하는 것 자체도 콜리 텐데 사실 그걸 실행하는 것도 퀄리티 에요 그 팀이 얼마나 좋은 팀 인가 그니까 디자이너와 아키텍트가 진짜 좋은 사람이 있어도 그걸 실행할 수 있는 팀이 없음 아무 의미가 없죠 그래서 이런 것도 같이 섞어서 생각을 하셔야 되고요 블리자드 같은 경우에는 어깨 게임이 재미 있어야 된다 4 사실 다시 판타지만 계속 부자를 왠지 이런거 다 무시하고 사랑의 4 같은데 그 굉장히 거기에 주로 많이 했는데 최근 들어 어 마이크로소프트 방식을 많이 돌입해서 사실 이제 그룹마다 아키텍트 를 다르고 프로그램 렌즈도 세우고 그래서 되게 말기부터 비슷하게 바뀌고 있어요 그래서 이런걸 좀 더 체계적으로 하기 위해서 이러고 많이 하고 있고 저희도 x 도 마찬가지로 어 그런걸 위해서 디자이너도 딱 한명이 이 사람이 다시 긴 중에 해람 아키텍트 책임지게 해라 이런 식으로 하고 거기에 조금씩 더 가서 디자이너 한테 항상 데이터에 4 이스트를 데이터가 큰거 된 디자인 할 수 있도록 도와주고 그리고 아키텍트 한테는 사실 클라우드 아키텍처 라는걸 한명 더 붙여요 요즘은 워낙 그 시스템 적인 게 클라우드로 많이 넘어갔고 아키텍트 는 사실 전체 시스템을 고민하기 때문에 클라우드 조금 많이 모를 수도 있어요 그래서 저희 같은 경우에는 아키텍트 있고 또 클라우드 아키텍트 한명도 뽑아서 이 aws 나 뭐 이런 걸 어떻게 쓸 것인가 까지 같이 보면서 둘이 같이 할 수 있게 하죠 이런 식의 조합을 좀 데이터 분석과 그 기획 그리고 아키텍트 와 뭐 클라우드 다 섞어서 해야 뭐 제품이나 기술을 완벽하게 될 수 있는 것 같아요 그리고 이런 것들을 계속 해야죠 발전을 1 2번을 끝나는게 아니라 지속적으로 해야 돼요 그래서 뭐 아까 mvp 같은거 라든가 아니면 기술적으로 개집 앰프를 하는 것을 계속 해줘야 되죠 이렇게 했을때 이제 이 안에서 이제 엔지니어들이 방금은 이쪽 제품에 관련된 이야기를 많이 했고요 이 안에서 이제 엔지니어들이 성장을 해야 되는건데 결국 이 엔진을 어떻게 성장할 것인가 에 대한 이야기인데 마이크로소프트 같은 경우에도 거기는 되게 많아요 그래서 엔지니어링 레벨이 뭐 35 개 어마어마하죠 그래 소프트웨어 엔지니어 일부터 소프트웨어 엔지니어 35까지 이렇게 척 있어요 그래서 뭐 17일 되면 관리자가 될 수 있고 뭐 27일 되면 뭐 디렉터가 될 수 있고 그만큼 철저하게 관리를 하는데 뭐 그렇게까지 하기 힘들 더라도 대부분의 회사들이 이렇게 우리 회사의 뭐 청구 개발자 중급 개발자 고급 개발자 뭐 이런식으로 좀 랭크를 잡아 줘야 되요 그리고 어떤 식으로 이렇게 성장을 해야 되고 그런 캐리어 패스 라 그러죠 이렇게 경력 살이라고 될까 뭐 이런거를 만들어 줄 필요가 있습니다 근데 어쨌든 마이크로소프트에서 는 사람들이 어 자기야 계속 승진 하고 싶고 더 잘하고 싶다 어떻게 해야하는지 가르쳐 줄 때 아이들을 주는게 너의 매니저 하고 일을 해라 매니저랑 이야기해서 어디가 더 승진을 하거나 발전하거나 되게 중요한 거예요 여러분들이 회사에서 얻어 발전하고 더 승질 하는데 가장 중요한 이 소스는 여러분들의 관리자의 요 더 많이 관리라고 걸 안 도와주고 있으면 사실 직무유기 줘 그러니까 그 사람이 일을 도와주는 것도 당연한 건데 내가 일을 잘할 수 있도록 도와주는 것도 당연한 건데 내가 어떻게 성장할지 도와 줘야 되요 고대 목을 꼭 관리자님 하고 여기서 옥시 이 말도 보스 기억하시면 레이즈 저도 이야기해서 내가 어떻게 성장할 수 있겠냐 물어봐서 관리자가 암 생각 없으면 막 지르세요 도와달라고 가치를 해야죠 그리고 자기가 목표가 있어야 돼요 앞으로 어떻게 하고 싶다는 목표가 여러 개의 섬 안 되고 있다 1 난 이쪽으로 성장하고 싶다 라고 목표를 세우고 거기에 집중을 해야 되는 거죠 그리고 마이크로소프트 내에서 이제 승진 하기 위해서 가장 중요한 덕목 중의 하나가 외로 곡에 대해 고객에 대한 이해 더라구요 참 y 전액을 하죠 그래서 사실은 생각을 맞는 말 같아요 명 어떤 개발자가 이렇게 훌륭한 개발자가 어떤 개발자가 잘하는 개발자 냐 이게 애매 모호 한데 사실 끝에 를 보면 결국 고객 인 것 같아요 교과 제품을 알아야 좋은 개발할 수 있는 거죠 단순한 개발 말하는 것인가 없는 거잖아요 그래서 이 고객을 잘 알고 사업을 잘 알아야 사실 개발자로서 도 잘할 수 있는 이렇게 하고 자기 매니저 와 같이 협력에서 계속 성장하는 그런 조직이 되어야 된다 사람이 되어야 된다 그런 식으로 이야길 하더라구요 그리고 재미있는 것은 결국 이 안에 성장하려면 또 네트워킹이 중요해요 좋은 사람들을 많이 알고 그 사람들하고 일을 같이 해야 되는 거잖아요 내가 어떤 사람들을 아냐 에 따라서 사실 나의 가지도 결정 나는 거거든요 그 사람들하고 네트워킹을 할 때 어떤 식으로 잘 해야 되냐 n 가이드로 어차피 번째로 이렇게 호기심을 가져라 다른 사람들이 하는 일에 대해서 호기심을 가지고 나한테 혹시 블 가지고 오는 사람들을 잘 돼 해줘라 그럼 호기심으로 사람들이 묶을 수 있다 두 번째는 그 사람들이 나를 놓아줘 쓸 때 꼭 감사해라 감사를 해야 그 사람들이 다음에 또 도와주는 거죠 세 번째는 나도 도와줘라 굉장히 지극히 단순해요 다른 사람 하는 일에 관심을 가지고 다른 사람이 내가 하는 일에 관심을 가지면 설명해주고 그러면서 내 일을 도와 달라 그리고 그 사람이 를 도와 달라 그러면서 점점점 네트워킹 커지는것 등산의 잘하는 사람들이 길이 점점 이렇게 하다보면 뭉쳐 요 그 사람들끼리 서로 도와주면서 발전하는 거죠 그래서 혼자 솜 아니라면 사실 이런 엔지니어링 캐리어를 올라갈 수가 없어요 주변에 자라는 사람들하고 계속 같이 해야 되는 거죠 블리자드 같은 경우에는 재밌는 시스템으로 내부 트랜스퍼 가 되게 많아요 전체 채용해 한 30% 가 내부에서 벌어져요 굉장히 신기한 거에요 열때마다 내부에서 나 채팅 가서 이럴래 그리고 가지 이라는 거죠 이런 게 있기 때문에 회사 굉장히 다이나믹한 거 같아요 그래서 여기에 회사가 좀 큰 회사가 있다면 은 사내 이동을 좀 권장 해주세요 그게 좋은 거에요 그 한사람이 삽질을 10년 동안 있다고 생각해보세요 그 사람은 사실 삽질 일어난 사람하고 비슷해요 10년 한다고 잘 알 리가 없잖아요 매매 나라에서도 직원이 10년 동안 10가지 일을 해본 사람이 10년 동안 한 가지를 한 사람보다 훨씬 유리해요 밖에서 사람 뽑는 것보다 아내는 사람 키우는 경우는 좋잖아요 그런 사람들이 어떻게 다양한 일을 해볼 수 있는가 이런 걸 고민해 볼 수가 있죠 넥센 같은 경우에는 세 가지 은사를 이야기하다 보니까 정말 내용이 맞춰 제가 이렇게 열심히 이야기하고 있는데 시간이 지금 너무 빨리 가고 있습니다 큰일 않는데 어쨌든 더 속도를 좀 해보도록 하겠습니다 넥슨 같은 경우에는 약간 그 저희 팀은 좀 셀프 드립은 각 팀이 좀 권한을 많이 가지게 노력을 해요 그러니까 결정을 책임도 주고 권한도 주는거죠 니가 알아서 해라 라고 해서 그 팀이 좀 알아서 많이 할 수 있도록 해주고 또 그치만 해서는 도리어 또 스페셜 하셔야 해요 그러니까 너는 자바를 좀 많이 해보고 뭐 넌 스카 를 많이 해 봐라 몇 년 동안은 그런 식으로 해서 각 개인이 자기가 열심히 할 수 있는 걸 좀 찾을 수 있게 해주고 책임과 권한을 다 주고 그리고 면 남을 좀 중요하게 생각해요 그래서 2주에 한 번 이나 뭐 3주에 한번 계속 면담을 해서 사람이 어떻게 성장할 수 있는 어디로 가고 있나 이런 걸 쭉 확인하는 그런 거를 많이 하고 있습니다 그래서 결국 이렇게 노력을 한다 해도 사실 본인이 해야 돼 전에 본인이 보니 자기 계발 해야되요 방 그것을 사실 밖에서 도와준다 라는 개념이고 본인이 개발할 때 뭐를 제일 많이 개발해야 되네요 말투 속에서 중요하게 생각하는게 의외로 어 협업이 협업 콜라보레이션 근데 콜라보레이션이 어떻게 되냐 커뮤니케이션은 거예요 아까 그 직원 모 50만 에 가까운 이 대규모 회사에서 제일 중요하게 생각하는게 커뮤니케이션 인 거죠 그리고 커뮤니케이션에 관련해서 되게 유명한 그 병원이 있는데 이에 22 드라 그런데 어디로 놀러 오신 분들은 oa cbd 만 기억해 가셔도 사실 제가 볼땐 본전 뽑았다고 봅니다 보내고 오시지 않았지만 어쨌든 조 a cbd 이것만 기억하시면 되는데 or as 컨설팅 유포지 사이딩 결정을 내리기 전에 응원하라 요 항상 혼자서 코딩을 하더라도 시스템 디자인을 하더라도 뭔가 내 보수가 그니까 보수 입장에서 뭔가 결정을 해서 이를 주더라도 사람들이 의외로 혼자 결정을 많이 내리고 통보만 많이 해요 진짜 안좋아요 결정을 내리고 통보 하지 말고 결정을 내리기 전에 은 5만 한번 해 봐 주세요 뭐 상대편도 대충 비슷한 이야기해요 근데 내가 결정 내려서 주는 것과 그 사람의 이야기를 듣고 어 그거 한번 해볼만 할 것 같은데요 제가 하겠습니다 하고는 천지 차에 예 자극에 검 1개 전이고 그게 골라 버리는거 예 뭐 이게 내가 하는 일을 장황하게 설명하는 것도 아니고 그 사람 이야기를 길게 들어주는 것도 아니에요 내가 내리는 결정을 그 사람과 같이 내리는게 사실 커뮤니케이션이 콜라보레이션은 거죠 이런걸 했을 때 사람들이 가치를 하시는 거고 이걸 할 수 있는 능력을 길러야 해요 뭐 상대편을 어쩔지 모르지만 나 부터 시작해야 되는 거죠 이런걸 했을 때 이제 리노베이션 일어나는 것도 자기 개발이 그래서 그리고 이제 당연히 오픈 커뮤니케이션 모든 사람들한테 다 아 내 상황을 잘 알려 줘야 되고 제 중앙로 서프라이즈 깜짝깜짝 놀라게 하면 되요 특히 내가 리더십으로 올라가면 올라갈수록 사람들 깜짝깜짝 놀라게 하면 안되요 제가 어디선가 읽었던 책 중에 굉장히 감동 깊은 메시지가 있었는데 리더 한테 가장 중요한 것은 이렇게 예측 성이라는 거에요 그럼 전 직원들이 그 리더가 다음에 어떻게 할 지를 예측할 수 있어야 된다 4 이빨이 되잖아요 이 리더가 분류 예측 불가능하며 나무도 일을 못해요 불안해서 물론 제 리더가 비전을 가지고 설명 했기 때문에 사람들이 이해할 수 있겠지만 이렇게 이야기했고 그대로 사람 그 리더가 천천히 실행하면 사람들은 알아서 북을 따라하거나 조금 더 앞에 가거나 활동 범위가 있는 거죠 뭐 부모가 걸어갈 때도 애가 부모가 이쪽으로 걸어 가니까 그 주변에서 노는 거 잖아요 근데 부모가 막 갖다 갔다 왔다 갔다 옴 애들이 불안하니까 엄마 아빠 다 짝 붙어 있는 거잖아요 그런 것처럼 예측 솜을 줘야 되기 때문에 항상 이렇게 오픈해서 보여 줘야 되고 루 서프라이즈 하면 안되고 제일 중요한 레이 cbd 이것만 기억하시면 된다고 넓고 말씀들이 줘 그리고 그 다음에는 이제 셀프 매니지먼트 어떻게 자기 관리를 잘 할 것인가 에 대한 이유에 나오는데 이것은 이제 타임 매니지먼트 시간 권리가 제 중요하죠 왜냐하면 저희가 제일 중요한 것은 시간이 잖아요 여기 계신 분들 또 다시 1시간 들어 저기 앉아 있는 거고 2시간을 어디다 쓰냐 그리고 이것은 없어진 우리 쏘기 때문에 뭐 돈 처럼 이렇게 통장에 보관을 보이게 안되요 오는걸 계속 관리해야 되기 때문에 타이 매니지먼트를 신경쓰셔야 되고요 어 여기서 잠깐 제가 옆으로 가서 책 하나 추천 드리자면 지금은 품절 됐지만 타임 매니지먼트 포터 미스 라는 책이 있어요 예 한글번역 수도 있는데 타임에 이지 뭐 트포 더미 저술한 책이 있는데 거고 한번 사서 읽어 보시면 굉장히 도전 될 거에요 야 그냥 24시간 사는게 그냥 삶은 되는거 아닌가 라고 도전 될 만큼 쪽 했었어요 엄청나게 복잡하게 좋겠어 쓰고 몸에 이를 어떻게 써야 될지 사람들 고대 월 어떻게 해야 될지 미팅 어떻게 될지 5 출퇴근 어떻게 될지 언문 어떻게 될지 지금 실제로 어떻게 해야될지 굉장히 많은 것에 대해서 깊이 타임 매니지먼트 다룬 책들이 많습니다 그런걸 보셔야 되고 또 그리고 워크 라이프 밸런스 이 중요하지 뭐 라벨이 라고 요즘은 그 결국 제가 좋아하는 말 중에 우리는 이를 닦은 됐기 때문에 쉬는 게 아니고 일을 다 끝내기 위해서 신다 라는 말이 있어요 굉장히 에게 의미있는 말이에요 그러다 끝내 보실 수 없어요 일어난 떠나요 계속 가는 거에요 계속 쉬어 줘야 되요 증가 정말 필요할 때 살피지 1 뭐 육체적으로 쉬는 것도 있지만 정신적으로 쓰는 것도 중요하거든요 저희 같은 정신 노동자들은 사실 지금 하는 일에서 뇌를 다른 쪽 으로 바꿔서 생각을 해야 되요 이런 강연 같은데 와서 앉아 있는게 굉장히 좋은 주식 예요 이게 여러분들의 뇌 안되는 굉장히 좋은 주식이 예 그러니까 생각 하던 게 아닌 다른것을 생각하는게 뇌에는 휴식이 줘 육체는 아무것도 안 하는 게 시킨 거고 그런 뇌 안되는 주식을 줬을 때 이 밸런스가 계속 잡히는 거죠 그래서 이런 걸 쭉 함으로써 이제 자기 개발을 하자가 이제 말투 속도 이야기인데요 블리자드 같은 경우에는 약간 그 유명한 말이죠 임브레이스 교인 어 기기라고 이 안에 있는 뭔가 또라이 끼를 다 발현 해라 뭐 이런 말인데요 뭔가 하고 싶은 게 있어 만들어 해봐라 그래서 사람들로 좀 권장을 하는 그런 것도 있고 그리고 교육을 되게 많이 해줘요 그래서 뭐 아트 클래스 같은거 있어가지고 뭐 q&a 로 입사한 사람이 아트 클래스 1년동안 테 공부해 갖고 마티스 로 바뀌기도 하고 교육을 굉장히 많이 시켜주고 제가 있는 넥슨 같은 경우에는 저희는 어 문화를 조금 약한 중요하게 생각해요 어떻게 우리가 아는 이라는 문화 그 이 문화가 약간 개인의 발전 하는구나 그래서 언제 지금은 없어졌지만 이제 코치를 좀 채용해 가지고 코치를 사람들이 면담을 하면서 어떻게 이제 자기를 발전시킬 수 있을 것인가 그 전문 코치가 이렇게 그 사람의 뭔가 미래 목표 생각인 거 쭉 들어주고 상담도 해주고 이런것 했었고요 그리고 퍼포먼스 립을 하고 좀더 구체적으로 너는 어떤 어떤 일을 어떻게 이렇게 잘 하는데 앞으로 어떻게 했으면 좋겠어 이런 구체적으로 뭐 코딩은 잘하는데 테스트를 못해 아니면 마케팅 틀을 잡는데 지식이 부족 애 뭐 이를 잘하긴 잘하는데 속도가 너무 느려 이런거를 조금 더 해서 엔지니어 같은 경우에는 7가지 항목으로 9분 해요 그래서 7가지 항목으로 9분을 해서 좀 체계적으로 이렇게 사람들을 발전할 수 있도록 좀 도와 주려고 노력을 많이 하고 있습니다 관리적 아까도 하셨지 자기가 발전하게 실 중요한 건 관리자 줘 그래서 이 관리자가 그런 말만 해요 네 이 회상 하셔서 나간다 라고 하지만 사실은 내 관리자가 싫어서 나간다고 동일한 말이라고 그렇잖아요 항상 관리자 거든요 그래서 마이크로소프트 이거 가지고 고민을 참 많이 알아봐요 어떤 관리자가 좋은 관리자가 그래서 나름대로 이렇게 좋은 관리자와 더 좋은 걸리죠 군 매니저와 그레이트 매니저를 갔다가 9분 해놨더라구요 그래서 9 매니저는 이렇게 사람들이 일할 수 있는 환경을 좋게 만들어 주는 거예요 결국 매니저가 해야 될 일은 그 거잖아요 이 사람들이 일을 잘할 수 있게 하는 것 저도 새 새해 보통 이제 팀 같은걸 만들고 사람들 불러 가지고 이제 일을 한번 해보자 하면서 제가 첫번째로 맨담 하면서 하는 이야기가 그 거에요 나의 가치는 니가 일을 잘하는 데 있다고 그러니까 내 일을 하는 것을 네가 도와 주는게 아니라 리드하는 것을 내가 도와주는 거다 이걸 반대로 생각하자 누이가 실무를 다 하는 거고 난 옆에서 필요할 리 소스 나 앞에 뭔가 장애물들을 다 없애는 이런 개념으로 가자 그래서 사람들이 최대한 라엘이 수술 써서 너희를 잘 되게 하라 그리고 사실 막말로 15명의 팀원이 있고 제가 있다면 좋은 자막 달리고 5명이 저를 서포터 하는거랑 5명이 막 달리고 그 제가 다 서너 서포트 하는 건 당연히 5명이 달린 것도 좋은 거잖아요 그래서 도와줘야 되는 거죠 그런 사람을 그렇게 개발 환경을 잘 만드는게 중요한 거고 또 5회로 이렇게 리스펙트 다른 사람을 갖다가 이렇게 종종 부터 인정한다 그러니까 그 사람에 대해서 예외를 당하는 거죠 다른 사람을 리스펙트 하는게 40 렌즈 한텐 되 게 중요해요 근본적으로 약간 무시할 수도 있거든요 특히 또 한국은 이렇게 뭔가 있게요 그 존댓말 반말 문화가 있잖아요 그러다 보니까 팀원들이 고 자기보다 어리면 이렇게 반해 말하기도 하죠 그런 점에서 저는 이제 백성 왔다니 전부 님 이라고 부르면서 전부 존대를 하더라고요 건 참 좋은것 같아요 이렇게 대표님 한테도 님이라 그러고 좀 막대 할 수도 있고 말 담도 저한테 마찬가지로 님이라고 맞게 하고 뭐 근데 뭐 이쪽 음 기분좋은 되서 좀 싫긴 하지만 여하튼 합쳐서 좋은거 같아요 이게 자꾸 부르시네요 4 그래서 사람들이 이렇게 존중 해줘라 이렇게 구매 했는데 거기서 그레이트 매니저는 뭘 더 해야 될까요 재밌는게 했던 말을 지키는게 그레이트 매니저 래 내 신기하죠 그러한 말을 지키기만 하는 것 되는 거예요 사람을 했던 말을 계속 지키는 거 이게 아까 말했던 그가 부 똑같아요 오픈 커뮤니케이션 오프라인에서 프라이스 한 말을 계속 지키는 거고 그 다음에는 어 상황을 정확하기 정해 주는 거예요 뭐 당신의 목표는 뭐고 다른 말로 말하면 4 당신에 대한 기대치는 보고 그 다음에 우선순위는 뭐고 거기에 1개는 부부 그래서 사실 그 이런 모든 그 단순한 일 뿐만 아니라 1 주변에 있는 나머지 까지도 다 정리를 해줘야 되요 그래야 사람이 집중할 수 있는 거죠 그래서 예를 들어서 여러분이 3 회사에 입사를 했어요 근데 그 매니저가 아 당신에 대한 기대치는 이 거고 그 기대치를 내가 이렇게 평가 할 거야 좀더 구체적으로 말하자면 이 제품을 만드는데 우리가 여기서 뭐 엔진을 이렇게 개발 했으면 좋겠고 이 개발이 예를 들면 뭐 6월까지 굉장히 안정적으로 개발되면 나는 너에 대해서 충분히 만족 하겠다 이렇게 말해 주면 은 생각해보면 은 일하기가 넘 편해요 난 그걸 하면 진짜 자란 사람이 되는 거고 많이 그렇게 했는데도 보스가 갑자기 딴 소리 하면 그 사람이 나쁜 사람인 거죠 그런 식으로 여러분들의 보수하고 이야기 한번 해 보세요 내가 뭘 하기 를 기대한 야 두번째는 근거를 자라고 있다는 걸 어떻게 평가할 거냐 2기 대치하고 평 깜 요 두개 세계 중요해요 그래서 나도 마찬가지로 다른 사람한테 나는 너가 이걸 하기를 기대한다 나는 그걸 이렇게 평가 할 거다 이렇게 해 줬을 때 사실 조직이 깨끗해 지는 거죠 그래서 지금 마이크로소프트에서 이 그레이트 매니저가 이런 걸로 정했다는 걸 보고 제가 역시 사람이 한 몇 십 년 살면서 능구렁이가 되다 보면 다 똑같은 생각을 하는구나 이런 애가 있었는데 뜨게 좀 와닿았던 메쎄 졌습니다 블리자드 같은 경우에는 매니저 트레이닝을 많이 해요 이게 다들 이제 게임 좋아하는 사람들이 많이 모이다 보니까 약간 관리가 좀 약해요 엥 까지만 하다보니까 관리자가 되는 그런 경우가 많아서 그런 사람으로 퇴행시키는 여고 굉장히 많은 프로그램을 돌려서 뭐 한 달에 한 번씩 교육도 시키고 또 자기네들끼리 점심도 먹게 해요 이렇게 다른 팀의 이제 듣기 모아서 업체로 점심 먹으면서 각자 보충을 좀 쉐어 하면서 뭔 좀 남을 도와 주기도 하고 그런 다양한 프로그램을 돌리지만 근본적으로 좀 이렇게 개방된 문화 굉장히 평평한 물 하기 때문에 매니저 라고 뭐 엄청난 파워를 가지고 매니저가 아니라고 봐 오고 꼭 크지 않아요 그러니까 다 같이 그냥 두리뭉실하게 이라는 그런 조직인 거죠 근데 이제 액션 같은 경우에는 저희는 그래도 이렇게 딱 그렇게 조금 부자처럼 완전 오픈된 조직은 아니고 뭐 치트 도 많고 일도 많고 뭐 전세계 많아요 사무실도 저희가 미국에만 뭐 샌프란시스코 뭐 cla 여러분도 있고 하다 보니까 좀 더 조직적으로 타이탄 해야 되고 이런 매니저 만들어 좀 더 키워야 되는데 그래서 제발 이제 돌보고 있는 매니저들 같은 경우에는 아까 뭐 개발자 같은 경우 7개 항목으로 평가 한다고 했잖아요 그래서 기본적인 뭐 일은 잘 아냐 뭐 책임성을 좋으냐 지식은 마느냐 다른 사람들하고 해법 은 잘하느냐 뭐 소스 코드의 법은 없는 야 뭐 소스코드를 깨끗 하느냐 디자인은 아키텍처를 잡느냐 뭐 이런 여러가지 7가지로 평가를 하는 거에 플러스로 두 가지로 평 갈래요 이 사람들의 관리자들이 줘 그만큼 관리자들을 어 성장시키기 위해서는 아까 말했던 기대치 아 고 평가하고 똑같은 거죠 나는 이름을 기대한다는 점에서 두 가지 평가 항목을 국어 영어 수학 처럼 두 가지 항목을 더 주고 평가하는 데 그 두가지 항목이 매니지먼트 하고 리더십 이에요 이게 비슷한 거 같잖아요 매니지먼트 우리 듯이 뭐가 다르냐 면 매니지먼트는 사람한테 포커스 라는 거예요 이 사람의 일을 잘하느냐 이 사람의 행복하냐 이 사람이 성장 1 0 그게 매니징 거죠 그런데 리더십은 달라요 내가 앞에서 생태 밀고 가는 거예요 일을 해야 되는데 내가 앞에 송 태 보고 갈 테니까 같이 가자 일을 해야되는데 니가 가는데 부족한 게 좀 도와 준다 그래서 리더십은 같이 일을 하면서 이래 포커스로 되는거고 매니지먼트는 그 사람들의 사람 자체에 포커스 하는 거죠 이제 문제는 이걸 좋을 순 없어 같이 가는거 이 두개를 자는 사람을 매니저 라고 부르고 보통 우리가 일반적으로 매니지먼트 라고 부르거나 뭔가 리더 라고 부르면 두개다 섞이게 되면 근데 제가 일을 하다보니까 두개를 다 잘하는 사람이 없어요 그러니까 어떤 개발자들은 기 빨려고 앞에 달려가는 걸 좋아하는 개발자가 있고 어떤 개발자는 옆에서 도와주는 걸 좋아하는 개발자가 있어요 그건 그런 사람들한테 그 상황을 알게 하고 부족한 게 문제를 알려주는 거죠 이렇게 심지어 이제 사람들의 뭔가 관리자로서의 능력을 향상시키는 데도 즉 시간을 들여서 그 사람들을 이제 발전 시키는 거죠 그래서 너는 리더쉽이 좋지만 매니지먼트가 부족하니까 좀더 사람들하고 대화를 많이 해 봐라 이 사람들이 요즘 회사생활 어떤 좀 들어봐라 너무 일에만 신경 쓰지 말고 사람의 더 신경 써라 하다가 뭐 다른 관리 저한테는 너무 사람들의 들어 생겼습니다 같이 커피만 마신다고 이 사람의 실력이 좋아지지 않는다 좀 더 구체적인 가이드를 줘라 이 사람의 뭐가 부족한지 좀 생각을 하고 그걸 공부할 수 있도록 도와주고 일도 좀 도와주고 이런 식으로 계속 양쪽으로 이제 사람들도 저를 시키죠 그리고 사실 이 매니저는 조제 첫 번째 9 매니저에서 나왔듯이 이렇게 문화를 만드는 거잖아요 컬쳐를 그래서 저랑 같이 일하는 조직 중에 1실점 같은 경우엔 이런 프로그램을 돌리는데 참 괜찮아 보이더라구요 그래서 4주간 프로그램 하나씩 돌려요 그래서 7의 1 40명 정도 되는데 첫 번째 주에는 올랜드 라고 전부 보여요 40명이 다 모여 가지고 그의 한 마디 시계 어나 이번 한달 동안 모았다 어져 번 한 달 동안 보호했다 사람들께 서로 이야기 하면서 그 40명이 서로가 서로를 이해하는 그런 시간을 가지면 조금이라도 그때 를 통해서라도 서로가 서로를 뭐 할 수 있는 거죠 그 다음에 그 다음 주에 주에는 아까 불리자 했던 걸 어찌 처럼 랜덤 7 하는거예요 40명의 그냥 투명 2명 아무렇게나 랜덤으로 프로그램 돌려서 사람들이 점심을 먹는 거예요 그래서 이제 서로가 서로를 모르지 않게 최대한 그래도 뭐 1 2 한두달 지나면 만큼 을 만나볼 수 있도록 에 돌려 주는 거죠 그리고 그 다음 주로 세미나 해요 그래서 함성 c 돌아가면서 뭔가 발표를 해서 사람들이 들을 수 있게 근데 이제 요즘은 일이 많고 그러다 보면 세 명을 직접 하지 않고 비디오로 도안이 하지 요즘 뭐유 댐 이라든지 좋은 게 많으니까 그 비디오 틀어놓고 그냥 몹 2차 같은 하는 시켜서 먹으면서 보는 거죠 물론 이제 공짜 피자가 좋아서 안되서 먹는데 있어요 비료 안보고 그래도 어쨌든 억지로라도 이렇게 공부하는 분위기를 만드는 거죠 그리고 그 다음 주에는 이제 생일 파티 라는 거죠 40명이 다 모여서 박수치고 한사람 생일 축하해 주고 그러니까 일주일에 한 번씩 이벤트 하는 거고 굉장히 시간을 만들어 것 같지만 사실 그렇게 말하지 말아요 왜냐하면 게다 첨 10시간 같은거 하는거라 어차피 밥 먹어야 되는 거고 이렇게 뭔가 계속 프로그램을 돌렸을 때 사실 문화가 쌓이는 거거든요 제가 오늘 페이스북 봤더니 이제 그 어벤져스 개봉 했다고 굉장히 많은 회사들이 이제 뭐 팀 이벤트로 많이 가더라구요 그런데 참 좋은 거죠 그래서 어벤져스 지금 볼건데 미래 2 페이스북 끊으라고 사람들이 자꾸 스포일 올려 가지고 안될 거 같아 나쁜 사람들 떠 올리지 마세요 4 열번째 입니다 이렇게 많은 일들 제품도 만들고 뭐 조직도 바꾸고 마 하지만 사실 점점 크게 보면 은 결국 조직의 조직 그래서 결국 마이크로소프트 마찬가지로 이렇게 돌고 돌고 돌아서 조직까지 와요 이 조직을 만들어야 돼요 마이크로소프트 같은 경우에는 어 뭔가 오피스 2010 6 을 발표하고 나면 그 조식을 해산 해요 그럼 완전 새로 개편에서 새로 만들어야 굉장히 조직개편이 심한 조직 중 그 회사 중의 하나 라고 들었어요 아는 사람도 스토어에서 치마 돼요 근데 이렇게 뭐 직원 이모 몇 십만 명 되는 대규모 회사가 이렇게 개편 해주지 않으면 물이 굳어 요 썩는 거죠 굉장히 위험해 지죠 그래서 아빠도 말아서 시피 전세계에 제가 볼때 7만 명을 데리고 소프트 하나 만들 수 있는 회사는 마이크 소프 밖에 없는 것 그 이유는 깨 요렇게 자기 개선 하기 때문에 안에서 끊임없이 그리고 사실 다 망해 간다 망한다 그렇지만 새로 오신 것이 온 이미 완전히 회사를 뒤집어 엎어서 막 리눅스를 내지 않나 뭐 콘솔을 내지 않나 뭐 윈도우 봉사를 뿌리지 안나옵니다 풀이 차를 바꿀 수 있잖아요 그런데 사실 내공이 거거든요 회사의 이제 기본적인 거고 그런 걸 하려면 결국 사람의 사람 그래서 그 안에 있는 사람들이 조직 안에서 계속 변화 해야 되는 거죠 그러면 이런걸 이제 조직을 계속 바꿔야 되는 건데 어려워요 조직을 바꾸는 게 그래서 이 조직을 바꿀 때 매니저 역할에 대해서 이제 생각해보면 3가지가 있는데 주니어 들이 이 안전하게 느껴야 해요 이 조직 바뀌는거 에 주니어 들은 불안해 할 수도 있어서 이거 조직 바뀌면 안 나와 못하지 하지만 그걸 달래 줘야 되고 반대로 시니어들은 아 이거 박하 바짝 그대로야 라고 반응을 해요 그래서 그 시니어들은 설득을 해서 가게가 되고 제일 큰것은 이 모든 사람들이 이 변화에 긍정적인 해야되요 그러니까 변하지 않으면 죽는 거거든요 사실 게임업계 도 마찬가지고 특히 it 업계 도 마찬가지고 제가 25년 동안 일했다 그랬잖아요 25년 전에는 이코 볼로 프로그램 썼고요 24년 자료는 포트란 오프 금 썼어요 지금 제가 그걸 아직도 쓰고 있을까요 제가 배운 지식의 95% 난 쓰는걸 그만큼 이 변화가 심마니 영역 업계에서 버티기 위해서는 계속 변화를 줘야 되는 거 나도 이제 조직도 마찬가지요 조직은 사람하고 달라서 변화를 주지 않으면 죽어요 사람은 늙어 즉 뜻이 조직도 늙어 주거든요 않을거 줄게 하려면 변화를 개수 줘야 되는 거죠 블리자드 같은 경우에는 당해 양이 그 인터널 슬퍼라 아까 이야기 했던 사람들이 계속 조직을 많이 왔다갔다 하고 또 오픈 컬처 로 어 이렇게 되게 열어서 사람들이 많이 이야기할 수 있도록 그래서 나름 뭐 그 안에서 개선이 많이 되고 이렇게 잘 하고 있었는데도 불구하고 다시 한 번 다음 단계로 변하려고 마이크로소프트에서 뭐 사람들을 많이 들였다가 막 시스템을 다 바꿔서 찮 아 요 근데 그 정도로 남들이 보기에는 굉장히 잘하고 있는 회사인데 도 우리는 불안하다고 한번 더 뒤집어 없는 거죠 그럼 만큼 우리도 우리 회사를 더욱더 조직을 좋은 방으로 바꾸는건 노력을 해야 할 필요가 있는 거죠 넥슨 같은 경우에는 제가 2년 반 전 점에 왔는데 뭔가 우리의 비전을 좀더 현재 정확히 첫 설립에 보자 글 우리의 제품이 뭔가를 좀 더 고민해 보고 그 제품에 맞춰서 조직을 좀 정리하고 그거에 맞춰서 이제 기술을 좀 정하자 그래서 좀 바닥부터 다시 한번 이렇게 쭉 봤어요 그래서 계속 사람들하고 고민하면서 단순하게 조직만 생각하는 게 아니라 크게 다 봤어요 어떻게 가야 되냐 뭘 해야 되냐 일에 대해서 이런걸 모두 모아서 고민하면서 이 작은 변화를 계속 주고 있어요 그렇게 해 속 작은 변화를 줬을 때 사실 줄게 바뀌는 거군요 그래서 사실 뭐 저도 자라고 있는 건 아닌데 여기 계신 분들 중에서 굉장히 큰 조 직장이라면 그리고 그 조직의 뭔가 변화를 주고 싶다면 제가 꼭 겉면 드리고 싶은 말은 변화 라는 단어를 꺼냄 안돼요 그 변화 란 단어를 끝내는 순간 엄청난 저항 해보죠 그러니까 변화를 하겠다는 마음을 가지고 변한 하겠다는 액션만 보이면서 사서 이끌고 봐야지 출근하자마자 첫날 나는 이 조직을 닭 알아볼 거야 하는 순간 모든 사람들이 다 아 바로 팔짱끼고 쳐다보는 걸 고를 제 주시면서 변화는 업체로 끌어내는 게 아니라 밑에서 그렇게 4세 생각을 바꿔야 되기 때문에 좀 오랜 시간에 걸쳐서 이렇게 투자를 하셔야 됩니다 어 굉장히 빠른 시간에 시간 충분할 자라나 아니네요 10가지 죄를 알아봤는데요 결국 그거에 대해서 한 가지 한 가지 제가 생각할때 제일 중요한 하나씩만 좀 짚어 볼게요 프로젝트 관리에서 제일 중요한 것은 mvp 조그맣게 빨 주시해야 줘 그래 프로세스가 개선에 중요한 것은 개발환경에 2살 하세요 그 개발 환경 자체가 사실 프로세스 개선의 일부라고 봅니다 비루 속도도 빨라야 되고 사람 그렇게 소통도 발라야 되는거구요 효율성을 어떻게 하면 좋나요 미팅을 우리가 어떻게 하고 있는 좀 고민해 봐야 돼요 우리가 미팅을 어떻게 하고 있는지 잘 하고 있는지 어떻게 개선할 수 있을지 그 미팅 자체로 트임 하지 해보셔야 되고요 협업은 어떻게 하나요 5 q&a 를 입에 다 아세요 q&a 베드 하는게 굉장히 좋은 거구요 품질을 어떻게 찾나요 제가 볼때는 코드 리브가 제일 편하고 좋은거 같아요 코드 리뷰 안하는 조직 에서는 그 코드가 약하고 코드가 약한 결국 제품이 약해요 코드 리뷰 꼭 하는 습관을 엔지니어 배만 안 돼도 하셔야 되고요 소프트웨어 디자인 아키텍처 이런거 어떻게 잘하나 여 4 아키텍트 꼭 보셔야 되구요 특히 클라우드 중 아키텍트 뽑으려 가지고 미래를 대비하세요 지금 클라우드를 쓰지 않고 개발한다면 제가 볼 때는 뭐 몇 년 후면 은 이걸 한번 논할 가치가 없는 주세요 당연히 클라우드 아셔야 됩니다 저도 데이터 블레스 지나면 전통 엄청나게 공부하고 있구요 어떻게 해야해 캐리어가 발전할 수 있나요 보스랑 상의하세요 여러분의 보스가 여러분의 승진에 관심이 없으면 여러분의 죽었다 깨어나도 쓰지 못해요 그 보수에 관심 만큼 여러분의 성장 수 있기 때문에 봇을 억지로라도 푸시 해서 많이 보수가 전혀 관심이 없다고 뭐 반대 가야죠 뭐 넥슨으로 오시면 제가 열심히 도와드리겠습니다 그리고 사기 제발 어떻게 하나요 a cbd 이제 뭔지 말 안할게요 acb 이거 꼭 기억하셔야 되요 진짜로 저녁에 퇴근 하실 때 요 계획해 보세요 내가 22대 했나 오늘 만일 a cbd 를 안 했다면 다시 생각해보자 하루에 한 반정도 일단 a12 해보세요 하면은 다 발라 지 느낄 거에요 주변 사람들이 나라 이야기 하는게 달라지고 내가 주는 사람 이야기 한게 달라져요 그리고 매니저는 억 컬쳐를 만드는 사람이에요 사람들과 같이 좋은 컨트롤 만들어야 되고 이 컬쳐 는 같이 만드는 거에 같이 혼자 하는게 아니라 같이 만드는 겁니다 로 조직은 말했죠 변환하면 죽는다고 그렇기 때문에 사람들이 변화를 인정하게 혈액에서 그 사람들이 그 변화에 긍정적인 되게 하고 그리고 그 변화를 돕게 만들어야 되요 관찰하고 안되고 가치 변화 하자고 그 사람들 끌어들이지 않으면 변화는 불가능해 모든 사람들을 뭐 값에 정치학의 죄송합니다만 촛불 있었기 때문에 지금의 사실 내일에 어차피 레이아웃입니다 내일 세상이 변할 거라고 내일의 그 설정이 있는 거거든요 2 만담 있는 거거든요 그렇기 때문에 사람들이 같이 해야 큰 변화를 줄 수 있는 거고 같이 1 하지만 조직이 변화가 없습니다 마지막으로 이대로 끝내기에는 아쉬우니까 제가 최근에 읽었던 중에 또 감명깊게 읽었던 멧세지 1 아 나누어 볼게요 딥 체인지 오아 슬로우 드디어 이거 딱 듣는 순간 저는 등 꼬리 4월 했어요 예 단순한 센지 가 아니에요 딥 체인지 정말 정말 깊게 변화를 해도 쉽게 바다까지 다변화 해요 정말 모든 것을 다 뒤집어 풍 만큼 뭐 한번 할 순 없죠 2d 체인지를 너무 빠르게 하면 죽어요 사람이 그러니까 딥 체인지를 천천히 하는 거죠 근데 어쨌든 입이 치질 안하면 천체 주는 거에요 이렇게 물에다가 뭐 그 뭐 고기 넣고 물을 천체의 그러면 계속 가만히 따 증가 잖아요 개구리 같은것도 그런 것처럼 쉽게 변하지 않으면 우린 천체 주는 거에요 여기 계신 분들 또 여기 있는 이런 여러가지 주제들에 대해서 좀 고민을 많이 해 보시고 그걸 자신 일하시는데 적용하되 이렇게 천천히 조금씩 하지만 그것을 진짜 바다까지 할 수 있는 만큼 많은 변화를 줬을 때 실수로 조직이 좀 더 좋아지고 그 안에서 이제 좋은 제품을 만들고 방금 제가 말씀드렸던 뭐 마이크로소프트 나 뭐 블리자드 라 넥슨 이라 이렇게 많은 회사들이 노력하고 있는 만큼 더 좋은 제품 좋은 조직 뭐 좋은 사람 이런걸 만드실 거라고 생각합니다 네 감사합니다 [박수]