제목: [NDC22-사업마케팅&amp;경영관리] 자동화와 함께하는 게임QA의 미래

[음악] 안녕하세요 넥슨 네트웍스 교회 본부 교 1실 갖춰야 됩니다 안녕하세요 자동화 함께하는 개인큐 이에 미래 라는 주제로 넥슨의 게임 qa 조직이 보다 나은 품질을 제공하기 위해 노력해 온 과정을 발표 하고자 합니다 자동화가 키워드 이지만 자동화 만 해 온 것은 아닙니다 개인큐 이에 어려움을 극복하기 위해서 일하는 방식 자체의 변화를 시도해 온 과정을 파트 벨로 소개해드리겠습니다 시작하기에 앞서서 넥슨 게임 qa 가 어떤 일을 하는 사람들인지 간략하게 말씀드리겠습니다 게임 qa 는 게임의 안정적인 서비스 품질을 확보하기 위해서 각 기능들의 작동을 검증하는 역할을 하고 있습니다 pc 게임과 모바일 게임들을 주로 테스트 하지만 게임만을 테스트 하진 않습니다 웹이나 결제 부스러기 도구 대연동 맥스 전반에 서비스 품질을 유지하는 업무를 하고 있죠 영상을 하나 보고 시작하겠습니다 4 지금 보신 영상은 사람이 테스트한 것이 아니라 자동으로 테스트가 진행되는 영상입니다 맥스 4 게임 qa 가 자동은 왜 시작했는지 와 함께 앞으로 무엇을 하고자 하는지 시작하겠습니다 개인큐 는 조금 어렵습니다 간략한 예시를 가졌는데요 매미 동의 라는 단순한 액션 하나로도 다양한 문제와 가서 합니다 새로 추가된 탈것을 타고 이동하면 검을 하면서 진행이 안 된다거나 특정 상황에서 이동하거나 특정 타이밍에 맹 로딩이 끝나면 게임이 종류도 있기도 하죠 모두 테스트를 했는데도 라이브 서버에서 확인된 결함 드립니다 게임 에는 다양한 구성 요소들이 있는데요 수십개의 맵과 수 쉽게 탈 것 보상 같은 경우에는 스 100회가 존재하죠 맵을 이동 한다 라는 간단한 예천 하나만으로도 예측하기 어려운 다양한 사람들이 발생하는데요 이 게임은 기본적으로 구성 요소가 많고 정기적으로 업데이트가 되죠 매 순간마다 고려해야 할 경우에 경 경우의 수가 많고 계속 늘어납니다 게임 자체도 많습니다 맥슨 에서는 다양한 장르의 써 게임을 서비스 하고 있고 게임만 테스트한 것도 아니죠 결제와 서비스 도구의 연동 상태 구글이나 애플 같은 스토어 에서 파생되는 업무 2 다양한 일당 이 존재합니다 고객님들께서 즐겁게 플레이 하시도록 게임은 계속해서 업데이트를 하며 진화를 해 나가는 데요 게임을 재미있게 만들려고 노력할 수록 시스템이 복잡해 지기도 하고 전혀 없던 새로운 콘텐츠나 구성요소들이 추가되기 때문에 비례해서 테스트 영역은 확장되고 테스트를 다 해도 높아지게 됩니다 게임은 다양해지고 서비스를 지속할 수 록 일감을 늘어나고 테스트에 다해도 는 높아졌기 때문에 게임 qa 는 항상 어려웠고 다양한 라이브 서버 결함을 마주할 수밖에 없었습니다 그럼 어떻게 해야 q 일을 잘할 수 있을까요 게임 qa 조직은 더 자라기 위한 방법을 고민 해야만 했습니다 가벼운 영상 하나 보겠습니다 앞선 영상은 현대자동차 그룹의 adas 검증 소개 영상입니다 운전 보조 시스템인데요 서너 꾼이 다르긴 하지만 주목할만한 차이가 있습니다 adas 라는 모듈은 성능 검증이 완료되면 중 3 아니든 대형 서당이 든 suv 드 어디에나 같은 모델이 닫혀 됩니다 검증 조직에서는 오직 기능을 검증하는 데 집중할 수 있고 이를 표준 하는 데 집중할 수 있죠 하지만 게임은 어떤가요 기본적으로 모든 게임은 서로 다르죠 장르 부터 시작해서 시스템 사용하는 기술 개발 방 칩 같은 것을 찾기가 더 어려워요 예를 들어서 거래소 라는 시스템이 추가된다면 아이템의 거래 라는 같은 역할을 하는 기능 임에도 게임의 장르나 개발 방식에 따라서 전혀 다른 구성을 갖게 되기도 하고 테스터 방심이 역시도 각 게임의 개발된 사양에 맞춰서 준비를 해야 합니다 갱 퀸은 높은 품질의 확보라는 하나의 목적을 가진 조직이 지만 담당하는 게임이 많고 서로 다르기 때문에 특정 시스템에 테스트 방법을 표준 하기보다는 담당하는 게임에 맞는 대응을 하는 데 집중할 수 밖에 없습니까 무엇보다 게임이 조금 많습니다 서비스 하는 게임도 많고 앞으로 더 많은 게임이 서비스 될 텐데 계속해서 마침 대응 만 하기에는 검증과 관리의 소모되는 비용이 증가하고 교회의 어려움 역시 계속 커질 수밖에 없었죠 채용이 쉬운 것도 아니기 때문에 무한대로 자원을 늘리는 것 외에 한정된 자원을 더 효과적으로 사용할 수 있는 다른 방법을 찾아냈습니다 더 효과적인 업무수행을 위해 두 가지 관점에서 일하는 방식을 바꾸는 도전을 시작했고 첫번째는 자동화 입니다 정해진 일정한 에서 모든 테스트를 완료 해야 한다면 어떻게 해야 할까요 순서대로 진행한 방식으로는 일정에 맞출 수가 없었고 명세서 대로 작동여부 만 테스트 하는 방식으로 테스트 의 깊이를 줄이면 라이브 서버에서 문제가 생길 가능성이 커짐 내가 자원을 더 많이 확보하는 것은 현실적으로 쉽지 않고 효율을 높이는 시도 역시 계속 해왔지만 투약 탄 성공의 경험이 없었습니다 무엇보다도 큐에 담당자가 무한대로 증가하지 않는다면 해결할 수 없는 일도 있습니다 가장 쉬운 예가 확률 영역이 줘 이미 검증된 영역은 상황에 따라서 대응 방법을 달리 하기도 하는데 금 변경 이 발생하거나 새롭게 추가되는 영역이 라면 가능한 많은 테스트를 통해서 작동 여부가 사전에 검증이 되어야 합니다 수천 수만 번의 반복 약 층을 해야하는데 일정까지 충분하지 않다면 사람이 아무리 많아도 무 결함을 담가 하기는 어렵죠 그래서 자동화를 해야만 했습니다 소중한 의원들을 단순 반복 작업에 투입하게 도 아까운 드리고 애초에 정해진 일정한 에 사람의 힘만으로 모든 걸 해 내기는 어려워 쓰니까 요 자동화 하면 떠오르는 대표적인 편견이 있습니다 자동화는 전문 인력만 할 수 있다 또는 시스템을 개발한 당사자가 해야 한다라는 변경 이 줘 변경은 사실입니다 이미 수차례 실제 실패를 반복하기도 했고 상용 솔루션을 사용하면서 자동화를 시도해봤지만 결과적으로 추가기능 확보나 맞춤 지원을 받기가 어려워서 제한적인 시도만 가능 했었고 특정 게임을 위한 자동화 도구를 개발할 때 또 했는데 너무 오랜 시간이 너무 되기도 했고 무엇보다도 만든 사람 외에는 사용할 수 가 없었습니다 실패를 반복하던 중에 넥슨의 운영 개발 실에서 자동화 도구를 개발해 주셨고 본격적인 시도를 할 수 있었습니다 자동화 도구 화면인데요 5 토플러 라고 합니다 특정한 액션을 수행하는 기능들을 교회 담당자가 조합해서 스크립트를 생성하면 자동으로 실행 시켜 주는 역할을 하구요 q&a 는 누구나 사용할 수 있도록 쉬운 사용성을 제공하되 필요하다면 커스텀을 통해서 추가 기능을 개발해서 사용할 수도 있습니다 게임 큐에 조직은 이 도구를 활용해서 각 게임별로 자동화를 진행해 나가고 있습니다 처음에는 소실이 논을 중심으로 주다니 스프린트 를 해봤구요 따 손 도구를 파악하고 자동화가 가능한 영역들을 발굴하는 데 집중했고 이후 기본적인 사항 방법들을 교육하고 효과가 확인된 사료 사례들을 공유 해왔습니다 액션이 유사한 영역이 라면 공통 영역으로 지정해서 작동 스크립트 구조를 정하고 가 게임에 맞게 이식하는 작업도 진행을 해 봤죠 이런 과정들을 거치면서 활용되기 시작한 은 사례들이 발생하기 시작했습니다 특정 게임에서 발생했던 사례 인데요 참고 사용중에 크래쉬가 발생한다는 동양이 있었습니다 변경 예정 도 없던 영역이고 기본적인 사용 테스트에서 문제가 없음 도 확인을 했던 기능이죠 보통 이런 경우라면 경우 적으로 창고를 반복 사용하는 과정에서 문제가 발생하거나 조건을 바꿔 가며 사용하는 과정에서 문제가 발생할 수 있다 라는 것을 의심하고 테스트를 수행합니다 대부분 창고를 반복 사용 해 보든 행동을 먼저 시작할 거에요 단순 하니까요 아마 수십 번 쯤 반복해 보겠지만 문제가 확인되지 않는다면 그 다음 액션을 시작하게 짜 캐릭터를 바꾼다거나 창고의 저장하는 아이템을 바꿔 본다거나 크래시 를 유발하는 조건을 찾으려고 집중할 것입니다 결론부터 말씀드리면 창고를 열고 닫는 부분에 문제가 있었고 창 코 사용을 수백번 반복하던 자동 스크립트를 통해서 재현이 된 경우입니다 앞서 말씀드린 것처럼 q&a 는 특정 조건에서 문제를 확인한 경험이 더 많기 때문에 수십번의 참고 사용을 반복해 보는 과정에서 문제를 확인하지 못했다면 천 번쯤 하면 발생할 거야 라고 생각하진 않습니다 아마 조건을 바꿔가면서 테스트를 했을 것이고 결함이 재현되는 데 더 많은 시간을 사용했거나 제언을 못했을 수도 있죠 하지만 자동화를 진행함으로써 기르는 반복 액션을 그리고 사람은 조건을 바꿔 가며 테스트하는 액션을 동시에 수행할 수 있었습니다 도구를 다루는 데 숙련된 사용자라면 특정 액션을 반복하는 스크립트는 짧음 시간 안에 만들어 낼 수 있습니다 거창하게 접근 할 것 없이 필요한 액체 만 반복한 에서 그룹들을 만들고 구동시켜 둠으로써 담당자는 조건 베타테스트를 동시에 실행할 수 있었기 때문에 더 빠르게 결함을 제어할 수 있었던 사례자 두 번째 사례입니다 확률에 이상이 없음을 확인 하려면 어떻게 해야할까요 0.06% 에 등장 확률을 확인 하려면 아주 많은 수의 반복 테스트가 필요합니다 문제는 확률 영역이 한두개가 아니라는 거 자 확률 과 관련된 모든 영역에서 이만큼의 시간을 투자할 수 있을까요 테스트 기능이 있거나 이미 검증된 영역 이어도 항상 불안한데 적용된 이후 최초 검증이라는 어떨까요 확률 영향을 반복 시키고 로그를 통해 확률을 검증한 영상을 보겠습니다 결과적으로 자동 반복 스크립트를 제작해서 향유 상자를 용 한 번 넘게 장비 강화를 1만 번 넘게 수행할 수 있었습니다 사람이 쉬지 않고 동일한 작업을 반복한다면 단순 개산 상으로도 80 원 정도가 필요하고 영업일 기준으로 는 10일입니다 시간도 시간이지만 이 행동을 반복하는 당사자는 꽤나 괴롭습니다 개봉을 하는 행위도 싫어하지만 확률을 인재 하려면 뭘 획득해 는지 기록해 나와야 하니까요 이 사례는 런칭 게임에서 런칭 직전에 자동 을 활용한 사례 인데요 보통 이 시점에 는 런칭 준비로 한창 바쁘기 때문에 소중한 자원은 수십 시간 동안 확률 영어만 반복해서 시킬 수는 없었겠지만 자동화를 함으로써 반복 영역을 기계에게 맡겨 두고 사람은 다른 일을 할 수 있었고 결과는 로그를 추출해서 도출된 확률 만 검토하는 방식으로 썬 싸 연관된 이슈를 미리 확인할 수 있었습니다 다른 사람들도 많고 계속해서 활용 사례가 쌓이고 있습니다 던전을 반복 클리어 시키고 획득 보상을 로그로 파악해 따거나 합성을 반복 시켜놓고 자동화가 종료 되기까지 약 5시간 동안 사람은 다른 영역을 테스트 하다가 결과물만 확인한 사례도 있었구요 정작 테스트를 위한 덤프를 추출하는데 하루가 꼬박 서머 듣던 게임에서는 기계에게 덤프 추출을 맡겨두고 나중에 결과만 검토 하기도 했죠 로그가 제공되지 않는 영역을 자동화 하기 위해서 문자 인식 기술을 사용해서 인식한 내용은 엑셀을 기록해 주는 기능을 만들어서 활용한 사례도 있었죠 사람의 하던 반복되는 작업들을 자동화를 처리하고 사람은 더 중요한 영역이나 다른 작업에 집중할 수 있게 된거죠 무엇보다도 같은 시간에 더 많은 일을 할 수 있기 때문에 새롭게 확보한 시간을 다른 영역도 테스트에 활용 한다거나 사람의 힘만으로 반복하게 어려웠던 영역의 커브 리드를 넓힐 수도 있습니다 기회 비용이 창출 되면서 같은 시간을 더 효율적으로 사용할 수 있게 되어 가는 거죠 너무 당연하지만 자동화 영역의 확대 될수록 비례해서 시간대비 효율은 상승하게 됩니다 그렇기에 맥스 4 게임 qa 는 더 많은 자동화 가능 영역을 확보하려고 노력하고 있고 a 부터 제트 까지 자동으로 실행하고 결과까지 도출해 주는 완전한 사더라도 좋지만 숨 시도 자연스럽게 자동화를 여장하고 필요할 때 언제든지 누구나 만들어서 사용할 수 있도록 역량을 확보해 나가면서 자동화는 전문 인력만 할 수 있다 라는 편견을 깨 나가는 중입니다 자동 감은 진행하고 있는 것은 아닙니다 경험에 편차를 줄이기 위한 도전도 함께 하고 있습니다 반복되는 영역을 자동화 해나간다면 사람은 무엇을 해야 할까요 기계가 모든 것을 대신할 순 없기 때문에 사람만이 할 수 있는 경우가 판단이 필요한 영역에 집중해야 합니다 한번 장애를 겪은 결함이 제 발생하지 않게 사전에 예방하는데 집중 한다거나 리스크가 있을 수 있는 영역의 선별하고 탐색해 보는 등 테스트를 더 잘할 수 있는 방법을 찾는 데 집중하는 거죠 교회에서는 주요 결함들을 정기적으로 리뷰 하는데요 한번 발생한 이 중요한 이슈가 재 발생하는 것을 예방하기 위해서 자 이 때 자주 등장하는 단어가 있습니다 특정 조건에서 문제가 발생했다 일반적인 상황에서는 문제가 없지만 조건이 결합될 때 문제를 야기하는 경험을 꽤나 자주 접하게 됩니다 이런 유행에 결함 들은 예측하기 힘든 케이스가 많기 때문에 사전에 예방될 수 있도록 항상 공유를 해 주는데 잘 활용 되지는 않습니다 왜 그럴까요 우선 게임이 많고 중요한 경험도 많습니다 그리고 다른 게임의 사례를 찾아보는 것도 어려워 썼죠 게임 구조도 다르고 장르도 다르고 콘텐츠도 다 다르다 보니까 막상 공유 해줘도 내 게임과 다르면 이야기가 힘들다는 문제도 있었고 담당 게임 에서도 똑같이 발생 한다는 보장이 없었기 때문에 바쁜 시간을 쪼개 가면서 찾아보고 실행하는 것을 쉬울 리가 없었죠 그런데 정말 그렇게 많이 다를까요 a 라는 게임에서 거래소에서 특정 행동을 했을 때 재화를 반복해 극하는 문제가 있었습니다 그리고 얼마 후에 이라는 게임에서 이벤트에서 특정 행동을 반복했을 때 보상을 만보계 되겠죠 심지어 타사 게임 에서도 같은 행동으로 인한 라이브 서버 이슈 가 있듯 있었습니다 게임도 다루고 재은 절차도 다르고 다 다른데 문제로 유발하는 조건은 같을 수도 있습니다 얼마전에 이 게임에서 발생했던 것과 유사한 결함이 얼마 후에 적게 이면서 발생할 수도 있고 같은 게임에서 유산은 결함이 다시 발생하기도 합니다 만약 현상 야 닌 원인 즉 본지 로 이해하고 있었다면 어땠을까요 담당 게임에서 과거에 발생했던 예외적인 결함을 쉽게 인지할 수 있다거나 다른 게임의 사례를 접하기가 쉽다면 어떨까요 약간의 노력을 투자하는 것으로 예방이 될 가능성이 커지겠죠 그래서 만들었습니다 케이스 메이저 라는 도구입니다 간략한 영상 보겠습니다 개념은 간단합니다 테스트 케이스를 기본으로 테스트와 관련된 정보들을 모아 놓고 누구나 쉽게 접근해서 필요한 정보들을 찾을 수 있게 하나로 통합 관리하기 위한 도구입니다 공통 영역인 쿠퍼 시스템을 테스트 한다고 가정할 때 게임마다 테스트 케이스를 따로 관리 했었습니다 공용 폴더 나 쉐어포인트 같은것에 엑셀 문서를 저장해 두는 방식으로 관리를 해 왔기 때문에 대량의 정보 중에서 내가 원하는 정보를 찾는 것이 어려웠고 사양이 다르다거나 변경될 때는 각자 개인 신을 하기도 하기 때문에 상황에 따라서는 누락되는 내용이 있기도 했었죠 케이스 메이저 도 테스트 케이스를 통합 관리하게 되면 공통 영역은 동일한 테스트 케이스를 사용할 수 있고 변경이 발생하면 실시간으로 갱신 하게 됩니다 동일한 영역 인데도 경험이나 예의 차이로 테스트 깊이가 다를 수 있다는 불안요소를 보완할 수 있게 되고 테스트 스윙 대상은 하나의 2부에서 모든 내용을 확인할 수 있게 되는거 자 담당 게임의 거래소가 업데이트 된다고 가정하면 보통 명세서를 참고해서 어떻게 테스트할 때 설계하는 과정을 거치게 되는데요 이때 담당자들의 숙련도에 영향을 받게 됩니다 이전에 발생했던 중요 결함을 있었다고 해도 담당자가 당시 상황을 인지하지 못했다면 테스트할 때 누락될 가능성이 생기자 자신이 경험한 그 외에는 중요한 경험을 인지 하기가 어렵다는 거죠 케이스 메이저로 통합 관리를 함으로써 검색만 으로 이전에 발생했던 중요한 결함이나 이를 유발하는 케이스를 찾아볼 수 있고 최신 하 된 상태의 테스트 케이스를 사용할 수 있게 됩니다 다른 용액의 유사 영역에서는 발생했던 중요했던 결함 사례도 검색해서 함께 확인할 수도 있게 됩니다 담당자의 숙달 여부와 관계없이 필요한 테스트를 누락 없이 실행할 수 있게 되는 거죠 그밖에도 테스트 케이스 마다 진행 상태가 표시되기 때문에 테스 진행 상황을 묻고 답할 필요없이 실시간으로 열람할 수 있고 주로 어떤 영역에서 문제가 발생하는지 누가 테스트 했던 영역인 지도 리스트 를 통해 확인할 수 있게 됩니다 라이브 서버 결항 물 대응하면서 경험으로 체득한 노하우들이 담당자가 변경되어 유지가 될 수 있고 다른 게임에서 더 활용할 수 있게 되는 거죠 케이스 메이저 를 통해서 특히 집중하는 부분은 추상화 입니다 교회는 정확한 테스트를 하기 위해서 정해진 사연과 순서 에 기반한 테스트 절차가 에 익숙한 데요 자신의 담당 게임인 경우에는 강점이 되지만 다른 게임의 사례를 접할 때는 중요한 내용을 공유 받아도 원인 이유 이상한데 도 쓰레 나는 절차와 기대 결과가 다르다 며 는 3rd 비약이 가 어려웠습니다 그렇기에 정확한 절차를 공유 하기 보다는 이해하기 쉬운 문장으로 예를 들어서 보상을 받는 화면에서 이런 행동을 해 보세요 라고 필요한 행동을 노출시킴으로써 테스트 담당자가 경우에 부족할 지라도 필요한 액션을 인지하고 실행할 수 있도록 유도하고자 합니다 케이스 메이저 를 통해서 경험이나 숙련도에 관계없이 누구나 중요한 결함을 예방할 수 있는 케이스들을 확인하고 실행하는 것 즉 테스트에 지르 상향평준화 하기 위해서 케이스 메이즈 를 만들었고 고도화 시켜 나가고 있습니다 자동화 도 케이스 매니저도 결국 큐에 연무를 고도 한다는 목적을 가지고 있습니다 모든 구성원이 자동화 도구를 사용할 수 있도록 자동 하던 영역의 같이 관계없이 유의미 하거나 질문에 활용된 사례들을 공유하고 있고 각각의 게임에서 적용해 보면서 조금씩 자동화 영역을 확대하고 있습니다 스크립트 작성 편의성을 강화하고 더 다양한 영역의 활용할 수 있도록 새로운 기능들도 추가하면서 도구 자체도 업데이트 되고 있습니다 케이스 메이저는 누군가 테스트 케이스를 작성할 때 대상이 되는 영역에서 어떤 중요한 결함이 있었는지 노출 시켜서 필요한 테스트를 액션을 쉽게 인지하고 빠짐없이 실행할 수 있도록 테스트 케이스를 추천하는 기능을 기획해 나가고 있습니다 너무 많은 테스트 케이스가 노출하게 되면 오히려 큰 혼선을 줄 수 있다는 부작용을 경험해야 썼기 때문에 검색키워드 일치하는 적합한 케이스만 노출시킬 수 있도록 중요한 케이스를 영역별로 분류하고 키워드를 지정 해 나가면서 이해하기 쉬운 추상적인 개념의 짧은 문장으로 다듬어 가고 있고 이를 데이터베이스화 하고 있습니다 노출된 결함이나 테스트 케이스는 담당자가 재 발생 여부를 체크해서 보다 가치 있는 케이스가 먼저 노출될 수 있게 정확도를 높이는 시도도 순차적으로 진행할 예정입니다 모든 구성원들이 경험과 관계없이 상향 평준화된 테스트 영향을 보여야 할 수 있는 것을 추구하고 있고 사람에 의한 테스트만 가능했던 과거에서 벗어나 서 이제는 교회 구성은 누구나 자동화 도구를 다룰 수 있도록 도전 해 나가고 있습니다 반복되는 영역의 자동화를 시도하면서 사람은 더 중요한 영역 에 집중한다는 목표는 성공과 실패를 통해서 쌓아온 노하우들을 보존하고 더 가치있게 활용하기 위한 목적도 있지만 결국에는 이 모든 노력은 맥슨 에서 서비스하는 모든 영역에서 더 나은 품질을 제공하기 위한 목표로 이어지고 있습니다 아직 가야 할 길이 멀고 험하지만 도약의 발판 마련 되었고 결과적으로 넥슨 게임을 플레이 하시는 고객님들께서 보다 쾌적한 환경을 누릴 수 있기를 바라면서 멈추지 않고 도전을 진행할 예정이니 응원해 주셨으면 좋겠습니다 의장 입니다 발표를 마치겠습니다 감사합니다 [음악]