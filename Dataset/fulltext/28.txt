제목: [NDC] Spark, Flintrock, Airflow 로 구현하는 탄력적이고 유연한 데이터 분산 처리 자동화 인프라 구축

안녕하세요 에서는 태그 시스터 제 다니는 박주호 입니다 4 5 저는 어 스파크 플리트 락휴 어플로 로 구현하는 탄력적이고 유연한 넥타 분산처리 자동 아이 프라 구축이 대해서 말씀드리겠습니다 어 일단 좀 제모 이신데요 어색하게 전에 이렇게 게임과 제트 관심이 많은 분들이 이렇게 모여서 같이 들여서 너무나 감사드립니다 오늘 전하고 싶은 이야기는 이제 역시 두 가지의 요 베타 엔지니어는 어떤 고민을 할까 그리고 그 고민은 그 고민을 어떻게 해결할까 그 과정을 좀 설명 드리고 싶고요 그리고 금상 처리 자동화의 아마 관심 안 있으실텐데 저희가 사용하는 그 인프라의 큰 그림을 보여 드리고 싶어요 5 주제로 하면은 어 저희는 스파크와 플릭 트라블 통해서 탄력적인 클러스터 구축을 하고 있는 글고 에 대한 설명을 드리고요 그리고 또 옆으로 그로 우연한 분석 스케쥴링을 하고 있습니다 이 내용에 대해서 말씀드리고 싶습니다 어 일단 시작하기전에 제 소개를 먼저 하겠습니다 저는 데브 시스터즈 게 있구요 어쿠 키라 운을 했어요 국회의원 개발했고 2014년 부터 2년간 서버 개발했습니다 서버 개발 했는데 이제 서버 개발 해보신 분은 알겠지만 요구가 굉장히 많이 않습니까 하루에도 뭐 특히 가 씩 남고 이런 너는 이 데이터가 많이 넘는 것을 정말 께 찾아보고 아 어억 여기서 우리가 어떤 인사이트가 있을까 이런게 알고 있잖아요 그래서 인형 정도 서 버 개발을 하다가 그 다음은 어색해 연구 랑 인프라 개발했습니다 형제는 저희의 데브 시스터즈 내에 베타 사양 쓰기 그 아침에 침 장으로 있습니다 자 우선 시작할 전에 제 3 타 엔지니어 로써 세타가 어떤 가치를 가지고 어떤 이니까요 뭐 각자 다 생각하시는 분이 있겠지만 저는 어제 양적인 측면 한번 생각해보고 싶어요 우선 대타 없으며 는 뭐 이거는 아주 패드 줘 발생 게 없잖아요 이건 마치 수장공사 행 과 예물이 없는 거랑 똑같은 상태에요 그렇다 없습니다 패서 이제 제타 가 쌀 수 있으면 당연히 좋고 그리고 이 와중 안에는 총 맛 좋게 쪽 이제 필파워 많이 쌓이고 하면은 어차 할것도 많고 그리고 머신건 같은 데도 활용할 수 있습니까 근데 베타엔진 0 한테는 이제 다 정말 끝없이 많은 정말 끝없이 거 아니냐 그대 그 때부터 재앙이 발생합니다 경험해본 신들을 다 있겠지만 이 책이 몰릴 때 이 몰라서 섬 정 수와 권리 때부터 가지 대 10g 녀가 발벗고 나가서 일을 해야 할 때 라고 생각을 해요 자 우리가 이렇게 할 수 없는 으로 이제 싱글 모시는 계산 한번 해본다고 하죠 뭐 이제 언제 정도 데이터는 뭐 아주 간단하게 가볍게 할 수 있겠죠 굉장히 실제로 저희가 다 얻은 데이터는 거의 이제 테라 쉬 테라 기준의 데이트 하기 때문에 이 때부터 문제가 많이 생겨요 아시겠지만 이제 서버 메모리 주스 켜지고 요 그리고 경우에 따라서는 오디스크 가자 금지 쾌 저정도 안되요 싸움도 안되는 상황이 돼요 판별이 글 많은 방법 써야 됩니다 근데 이런 우리의 옛 엔지니어들은 시간이 성적만 소모되고 일어 보면은 우리의 마음도 데이터로서 떠나게 되죠 그러면 떠나면서 아재 탄창 지독한 거야 이런생각 남기고 데이터를 어 그래서 보고 싶지 않게 될 수도 있죠 그래서 따라 게 생각해보면 은 생각에는 4 엔지니어 호 하는 일은 거의 데이터 부하 분산 이라고 저는 생각을 해요 그럼 데이터 계층 구조도 만들고 그리고 레이크 도 만들고 싫어 많이 하죠 굉장 일단 기본적으로는 이 데이터를 다루기 위해서 구합 은 사실 해야 됩니다 응 그래서 저희도 이제 캐릭터 성장 많이 쌓이니 까 분석을 하기 위해서 시간 머신으로 보지 안 된 상태가 있어요 쓰 이거를 가지고 이 제품 산 처리하자 우리도 한 대로 안 되니까 더 여러대 뭐 심스 자고 간 것 평소에도 표시 겁니다 하자 숭산 철의 세계로 4 에서 이제 저희가 데이터 분산 처리를 시도를 하게 됐어요 자 속에 다음 주제로 쓰는 스파크 랑 어플인 트라고 통해서 탄력적인 클러스터를 축을 했습니다 우선 파크에 대해서 먼저 간단하게 말씀드릴께요 제 스파크는 어 예 스트를 보시면은 스파크는 되게 여러 가지 환경 r 환경에서 볼 수 있는 분산 처리 엔진 이에요 그래서 뭐 여기 보시면은 쎌카 소스로는 뭐 j 멋있음 되고 섹스 비디오 vhd fco 여러가지가 있구요 그리고 s 짤이나 데이터 프레임 같은걸로 작동할 수 있어요 근데 어제 각각 그래프에서 오늘 말씀이 싶은 것은 딱 이 상장 이에요 파크 는 기본적으로 분산 처리를 지원을 하구요 그리고 드라이버 라는게 이제 팬이 많은 마스터 같은 지면 조금 개념이 다르지만 그리고 이 스튜 터에서 상철이 가 생각합니다 스파크를 저희가 2015년부터 14년 꾸준히 써 왔는데요 저희가 싸움 경험상으로는 모유 끼 있는 분산 처리 엔진이 고 게 맨 처음에 나왔을때는 이거를 가지고 어 벤치 같은거 많은 많이 아는데 요새는 팬츠도 없어요 그냥 이게 너무 이제 많아져 가지고 이걸 많이 쓰고 반장선거에서 저희가 프로덕션에서 불러서 까정 이었구요 플랫폼 호환도 잘되고 spl 이랑 데이터 프레임 기반의 분석 2c 지원하기 때문에 이거를 사용하실때 지존 에 대해 타고서 가시는 원보 편하게 사용하실 수 있습니다 일단 스파크로 저는 분산처리 하구요 이제 여기서 부터 저희가 후아 분산을 하는 이야기로 말씀드리고 싶습니다 저희 기본 시스템은 이제 클라이언트 이거는 이제 저희 그렇게 발짝 서버 줘 이렇게 약한 개발자 클라이언트 접 거기서 20주 로 파크를 띠었고 요 그리고 aws 에 있는 s3 저희 저희는 데이터 저장소로 사용했었습니다 근데 이제 이런 유천이 얻는 거죠 오늘 접속한 유저의 코인 벌여 알고 싶어요 이러면 뭐 분석한 뒤 3 그러면 일단 클라이언트에서 20 스팍 프로 찍어 달라고 요청을 합니다 가령 저희가 이 데이터 경우에 쉽지 아주 작은 데이트 하기 때문에 주 대만 깨달을 좀 했다고 해 보죠 너는 모 음 근데 뭐 이런 조차 노는 거에요 지난 지속 속한 유저의 코 입 노령 알고 싶어요 그러면은 역대 쯤 될까요 간단하게 산 하면 되겠죠 그래서 에는 하루가 아이 체리 치료를 이루어졌으니 깐 이것들 황태자의 그래서 앤 양모 7회 2배 뛰어가는 서버 갯수도 별내 댓글 지금 즉 힘 대 이렇게 쯤 어떤 일을 하세요 제가 주제를 찍은 제군이 걸렸기 때문에 17 어쩌면 거기에 7 배 서버 로 찍은 시간도 어 7배가 걸려서 40 미군 일하는 시간이 걸렸습니다 그가 클러스터 학기 그는 된다 시 군의 걸리는 거예요 그래서 우리는 추가에 분석을 할 때마다 사실 분위기도 해야되냐 이렇게 되는 거죠 물론 아주 5 이제보니 넣고 풀어 가 있으면 항상 끼얹고 쓸 수 있겠지만 우리 분석을 필요할 때마다 클러스트 뛰어서 분석하고 될 이런 과정을 해야 되잖아요 이게 왜 그런고 하니 어 원래 이제 스파크를 뛰어는 퀘스트가 어떻게 됐어 저는요 어 말그대로 뛴다고 하면은 우선 첫번째로 현재 띄웁니다 이제 대 한 3분정도 벌려 서버 가 뜨고 이제 연결 해서 파크 세팅해 주고 주대 쯤 다 하는 또 3분이 걸리겠지 그럼 이렇게 돼서 둘의 배를 띄워 쓰니까 총 6분이 걸리는데 이게 그대로 5 42분 2 14 쯤 40분에 걸렸던 거에요 굉음 1대 찌우고 현재 끼우고 편지 찌고 이렇게 연결하는 구조가 있었기 때문이죠 그러면 이제 당연히 어 고민이 됩니다 아 으 클러스터 르 해가 빨리 뛰어서 없을까 배는 꿈이 되겠죠 그런데 이 구리 개발자라면 아까 같은 뜻으로 바짝 당연히 떠오른 단어 하나 있습니다 기본 양 ioc 잉카의 8t 소스가 이거 보심 칸 하는 것이 그럴 것 같은데 이거 를 해주는 이제 라이브러리가 바로 이펙트 락 이라는 어치 웁니다 해서 이 프린트 라르스 들면 어떤 식으로 부조가 왜냐면 저희가 원래 라고 말씀드린 것처럼 파크 클러스터를 치울 때 2세 3분 3번씩 모 두 번 해야 될 뿐이 걸리잖아요 그런데 이 클라이언트에서 앞에 플랜트 락 이라는 걸 하나 더 치고요 여기다가 요청을 하는 겁니다 버티기 띄워 주세요 그러면 여기서 자동으로 싱크 하게 가까 서버를 세팅하고 띄우고 찍은 다음에는 그 섹시한걸 따라 클러스터로 연결을 시켜줍니다 그래서 수 될줄 깨끗한 한권이면 되는거구요 그리고 저희가 아까 14 대해 된다고 했잖아요 14 찍을 깨고 똑같이 3분이 걸리구요 아점 데 물론 이게 어색하게 볼 때는 참 세팅을 잡아주고 맞으면 자라는 과정 별도로 소요되기 때문에 실제로는 5분에서 7분 정복 술 가 됩니다 어서 시크하게 이렇게 깨어 저희가 서버를 좀더 빨리 찔 수 있는 구조가 됐구요 그래서 그 전에는 원래 이렇게 저희가 직접 찍는거 라면은 그 다음에는 프린트 라고 써서 앞에 레어한 덮치고 서버를 찌우는 방식이 됐습니다 이 기본 점프 랜턴 의 역할이 인데요 저희가 가라앉고 이런 요청이 있을 수 있어요 14 대해 클러스터 5 저희 작업을 하고 있는데 갑자기 이런 청년이다 책은 2주 동안 접속한 유저의 코인 보령에 알고싶어요 일어나는 우리가 한줄 했을 때 얼른 있었잖아요 그럼 이거 두 배로 뛰면 되잖아요 컴퓨터 클러스터 어느 집에 로 만들자 한껏 수배를 키우자 이렇게 씩 조금 우리가 이 두 배로 만드나요 거리지 한번 생각해보죠 자 일단은 플레이트 우리가 빨리 찔 수 있잖아요 첫번째 방법 취중 클러스터를 4대로 부족하자 나이 번은 안 되니까 크로스 내리는 거죠 그리고 쓰며 할 때 크로스 새로 뛰어요 왜냐 우리는 프린트 라고 빠르게 뛸 수 있으니까 라고 개발자 들은 얘기 안 하겠죠 10 금주를 하는 이런 케이스는 굉장히 필요 이겠죠 그럼 시점은 어떻게 할 수 있겠냐 두번째 방법입니다 두번째로는 이제 새로운 썰을 * 벧엘의 띄운 ssh 로 2 서버 접속 합니다 그래 내가 있는데 그중 한 뒤 접속 하는 거죠 그러면 이제 이니 떠있는 클러스터 톡 플러스 가 있기 때문에 2+ 연결시켜 주는 작업을 해야 되요 특징을 잡아 줘 이걸 14번 반복해요 그러면 클러스터가 학습 여태 가 되겠죠 아니 근데 서버 1대 추가 때마다 이 녹아들 해야 되다니 이거는 진짜 개발자 로써 참을 수 없는 일입니다 그래서 그럼 저희 고민하고 있는 있었는데 이 프린트 락의 이런 플리 캐스트 가이스 애플리케이션 트란은 것은 이제 어떤지는 개발에 추가해 달라는 걸 창의적 써플 퀘스트 보니까 얀은 밖에도 ad 슬레 g 링 오브 슬레이브 라는게 플리 캐스트로 와서 뭐 지가 되서 개발 있어요 아 고민 해결 굉장히 a 메구미 해결 되죠 그래서 이 에드 슬레이브 l 근데 말씀드리면 은 이제 원래 플린트 락 은 이렇게 cli 기반으로 간단하게 클러스터를 구축할 수 있는 기능을 제공하고 있어요 4 그 중에서도 플랜트 락의 강력한 기능 중에 하난 기능 중의 하나는 어떤 클러스터를 내가 세팅 하겠다고 설정해 놓으면 은 거기에 클러스터를 추가하거나 해 거나 했을 패기 간단한 crs cli 를 사용하면 은 서버 를 추가해서 플러스 확장 해주고 5 필요 없을 때 내려지고 이런 기능을 간단하게 쓰실 수 있습니다 근데 2nd 슬레이브 리무 슬래브의 줌 씨 화가 하나 있는데요 어 이 플린트 락 이 이제 오픈소스 있었고 저희로 쓰고 있었는데 이걸 박성혜 돼서 이 개발자가 공개를 합니다 네 저희 사 진 경우에 이제 셀 컨퍼런스 1 커뮤니티 오픈 소스 활동을 장려하고 있어서 저희가 박성혜 3강 침에 2분이 만났어요 만나서 어 야 우리 우리의 3번 놀러와 요리 미국의 계신데 뭐 아시아 올 있으면 에서 월 해머와 그런 식 이랬어요 어그 3 4로 소대를 했구요 사실 이 프리캐스트 기능은 저희 회사에서 같이 개발하는 거에요 개발자 뿐이라 회사로 창을 해서 짧기 표시하게 했는데 저희 회사의 개발자 빈 이구요 실제로 여기에 저희 개발자 3 2 3 보니 투입해서 가치기준을 개발했습니다 어 그래서 나중에 보니까 이런 것 빵을 있더라구요 이거 저희가 남긴 게 아니고요 그분이 5 한국어로 뭔가 반기고 싶어서 제가 짱 을 쓰려고 싶었던 것 같아요 근데 와 짱이다 예 라고 어감으로 나쁘지 않아요 싫다는 거야 그래 이거 이렇게 남겨 주셨더라구요 써 저희가 이렇게 2d 슬래브 라임 슬레이브 도 개발 접수 개발자도 같이 차원에서 개발 했구요 간단하게 정리 하자는 플린트 락 으로 저희는 심각하게 빠른 속도로 클러스터를 구축할 수 있겠구요 그리고 cl 기반으로 간편하게 클러스터 를 세팅하는 어 기능을 쓸 수 있었습니다 그럼 마지막으로 제일 중요한 것은 그 분석 주문에 따라서 흘러서 사이즈의 항상 동일 하지 않아요 똑같은 분석 8 프랑의 라인 안에서도 5 뭘 별로도 계산할 수도 있고 하루 칡 하시고 다 다르잖아요 또 가령 이제 머신 러닝 각층 할 때는 큰 대타를 분석해서 뭐 데이터를 오르기전 에서 만들어 놓고 서버 1대로 10주 서버 한테 끼어 계산 한 건지 뭐 이런식으로 클러스터 싸 이 즈 어 조절해야 될 때 이 프린트 였으며 는 탄력적으로 조절할 수 있습니다 작은 두 번째로 어여 플로 를 활용한 연어 스케쥴링 에 대해서 말씀드리겠습니다 난 앞에서 우리가 플레이트 라고 붙였기 때문에 이런 구조가 되요 클라이언트가 있고 이제 프린트 라고 시크하게 서버 렛 유 식 근데 분석을 할때 이런 요청 이었어요 매일 아침 매일 아침 국가별 매출액을 리포트 해주세요 뭐 당연히 오실 쓰는 청이 줘 저희가 이런걸 만들었습니다 자 상품정보를 일단 가져오고 요 매출 알아야 되니까 상품 정보를 가져오고 그리고 각 나라마다 그 하늘 그 통화 마다 환율이 다르죠 환의 서버에서 api 로 하는 정보를 가져와 그 다음 그 걸에 이제 보시기 편하게 달러로 전부다 가격을 환산 해주고요 그 다음에 구매로 트랜잭션이 지원된 로 db 에서 구매로 올해 가져오고 제 구매로 부터는 좀 양이 들어가니까 클러스터로 그냥 처리하는 것 그 다음에 이메일 퍼트를 합니다 그리고 왜 아침 해야 되기 때문에 내 소중한 에서 리포트 생성 하죠 중대 이런 굉장히 스프 겠죠 개발 체험들은 우리가 컴퓨터 한테 자동으로 뭘 하라고 시켜야 되는 우리가 해야 된다고 이건 넣으실 수 없는 일입니다 그래서 이 때 보통 어떤 식의 방법을 쓰냐 하면 자 크론 이라는 걸 써서 우리가 자수 캐주얼 이게 보통 해요 어그로는 이제 이런 식의 ctx 를 지원하는데요 그냥 1 어렵게 간단하게 말하면 이 5개 5개 넘버로 이제 그 잡스 캐주얼 우리는 언제 핵 번째 돌리 건지 시작을 항의 5 예를 들어보면 이 첫번째가 펭 게 미니 걸까 벽 분 두 번째 있는게 몇 시에 요 경영하고 이제 * * * 하면 이건 모든 해당 대뜸 5 가도 역할 건 얘기겠죠 그럼 00:00 이니까 이건 몹에 정각에 돌려달라는 얘기에요 자 그러면은 저희가 크로네 붙였습니다 그러면 매일 정가 개가 돌아서 짝 계산을 하고 b 터치해 줘 근데 이런 경우가 있을수 있어요 황 1서버 저는 atl 가 호출 하니까 api 가 은근히 실패할 때가 있는것 실패란 갔는지 이는 오직 다 정상적으로 볼 수 없겠죠 그러면 은 우리가 될 리포트를 만든다 하더라도 맨날 맨날 보는 거니까 실패했을 때 어떻게 없애 로 볼 어그 어떻게 비차 해라 이런 로직을 추가해 줄 수 있어요 그리고 또 하나는 어 라는게 구매 로고를 가져오다 가 실패한 거에요 어 그래서 구매로 굴을 가져오려고 했는데 실패 라면은 세탁 없으니까 그 다음에 구축한 것도 없으니까 흘러서 돌아다 무것도 타고 리포트도 살 수 없겠죠 이때 이거 를 커버할 수 있는 3백 기능도 필요합니다 그리고 마지막으로 어제 중요한 것 중의 하나인 리포트를 기능 그러니까 개발자 한테 이게 10 했을 때 알려달라 리고 찍힌 이 필요해 그래서 분석 스케줄링 에 이거는 제 생각해 거의 무조건 들어 가야 되는지 이에요 산죽이 적은 분석할 수 있는 데일리 크림 어스 용 옥션 해야되고 그리고 어떤 측정으로 직에서 실패했을 패 리츠 랄 수 있는 그는 로직이 필요하구요 그리고 분석을 한 아가씨 패스 l100 할 수 있는 기능이 필요 가령 gb 로 5 10개를 썼는데 실패 소프 10개 쓴거 달려야 되잖아요 인어 폐기능 이라든지 그곳도 시 패스 갈증 패배 키는 필요합니다 4 우리가 흔히 쓰는 이제 스케줄러 인 크론 에서는 주기적인 분석할 수 있는 it's 심텍 싼 지원을 하구요 리츠 라이너 쇼 외로워 같은 지능을 없기 때문에 직접 부른 해야되요 근데 이거를 해주는 좋은 친구가 있습니다 그게 뭐냐면 바로 이 어플로 라는 벌써 이고요 이거네요 에어비앤비 에서 만들고 개발해서 제 공개 동부 소스 입니다 2 옆으로는 2시는게 다이스 모집 미적분 설이 차이로 집회 입에 페루 퍼터 다 있구요 그리고 후 1 저희가 이 플로레스 는 중요한 유경 나는 유연한 분석 의존관계를 관리할 수 있게 해 줘 이 거리 최초 보여드리며 는 어 2 아까 잡 전체적인 그 분석해 수 있잖아요 그거 하나 나를 이런 백을 한 형태로 관리를 해요 이대 그 하나가 어떠한 분석 어스퀘이크 전체를 의미합니다 그리고 외부 많은 제로제로 * 거리죠 아크로 은값 똑같이 주기적인 등을 지원 하구요 그리고 누가 실행 시간 는지 어떤 삶의 언어 인지 그리고 이 스택 there's 가 없게 되는 지도 답 공개됩니다 개그 로 관리할 수 있구요 여기서 이제 실제 자비 어떻게 되는지 분석이 되는지 한번 선택을 해 본다고 해도 선택을 하면 은 이런 창이 나옵니다 그래서 댁은 리포트가 객실에 푸가 나오는데요 아까 우리가 그 배출 입법을 할 때도 맨날맨날 이제 여러 가작 뜨기 얽혀 있었잖아요 그래서 그거 개별적으로 하나하나 어떻게 되고 있는지 시각화 에서 보여줍니다 그리고 여기에 보면은 이 색깔이 초록색 인데요 초록색을 성공했다는 이구요 그리고 뭐 그게 분홍색 쓰겠다는 거고 10 페레스 때는 빨간색으로 나오겠죠 이런식으로 아주 편하게 할 수 있습니다 그리고 더 좋은건 2개씩 악화로 그린 보면 우리 은지 저 는거 뜯어서 땅에 붙이고 싶잖아요 이렇게 한 주시면 되요 1 절로 이게 코드로 이걸 관리하게 되어 있는데요 2코스 1주일만 딱 바꾸면 이런식으로 q 왔다갔다하는 것도 굉장히 간단하게 구현할 수 있습니다 그래서 실제로 살해 중에 공개 대사 중 이런 그래프가 있는데요 이런 우리가 분석 쿼터 파이프라인에 짠다 했을 때 이걸 시각화 없음 절대 불허 낼 수 없겠죠 나중의 여캐 될 수 있으니까 이런 기능을 잘 활용한 졌습니다 그리고 또 강력한 기능중에 하나는 여기서 우리가 1 2 잡을 클릭을 해요 클릭을 하면 어떤 장이 팬에 너는 이런 창이 떠요 이게 하나의 잡을 컨트롤할 수 있는 기능이에요 써보시면 태스크 디테일이 있죠 이걸 선택하면 은 지금이 자비 무엇인지 구체적인 정보를 알려주고 요 또 로그도 개가 잡 별로다 발리 할 수 있어요 주로 감은 이제 그 어루 가 나오고 또 런 하면은 만약에 10대 레서 우리가 한번 더 돌리고 싶다 이런 걸 넣은 선택하면 되구요 그리고 오늘은 이거는 뭐 수동을 했으니까 어 뭐 별 필요 없다 한번 마크 서 섹스를 하면 은 이제 거기서 다시 돌지 않고 성공한 걸로 표시가 됩니다 그리고 실패했을 때는 제 클리어 라는것을 선택을 하면 에 그 자비 클리어가 돼서 초기화가 되요 추가가 되면 어떤 일이 발생하면 초기화가 된거 는 이제 정책에 따라서 이 어플로 가 자동으로 재 실행을 해 줄 이게 어떤 의미를 가진 하면 우리가 저에게 10개의 자비 순서대로 시행 되어야 되는데 실패했어요 그러면 게르 키랑 10개를 클리어하고 여기 권이 다운스트림 인데 10개를 선택하고 클리어를 하면 은 그 아래 있는 아래에 있는 애들이 다 클레어가 되고 처음부터 다시 가 실행하게 원하는 부분을 선택해서 우리가 얼이 트 랄 수 있는데 또 간단하게 쓸 수 있습니다 싸이 어플로는 정리하자면 이제 개그 라는 곳에 통해서 어 독립적으로 관리가 되구요 그래프 형태로 분석 파이프라인을 심각해서 보여줍니다 그리고 어 어 작 그룹이나 그리고 배 그 안에 또 서브 대거 라는 하게 구조를 만들 수가 있어요 흑형 화면은 까 말씀드린대로 코드 한줄로 이렇게 여기 분석하던 거려 프로가 닦여 붙인 라든지 뭐 병렬로 2개를 만든다든지 하는 것을 아주 쉽게 하실 수 있고요 그리고 잡 땅위로 상태로 기 뭐 에러 확인 리트라이 정책 갇힌 것들을 개별적으로 선택할 수 있기 때문에 아주 간단 하실 수 있습니다 그래서 저희가 마지막 5 제안 드리는 부종은 이 플랜트 랄까 옆을 오래 같이 쓰는 구조에요 프린트 라고 탄력적으로 클러스터를 만들 수 있고 이제 어플을 통해서 유연하게 품 섭취 줄 하는 거죠 제 예시를 하나 들어보자면 우리가 아까 했던 것은 내일 그네 걸을 분석하는 거잖아요 그게 아니고 왜 특정 나래는 월별 분석 빼 달라는 거죠 그러면은 어 이제 타 량이 다르 전 다르잖아요 당연히 그래서 이제 매일 돌린 것은 이틀이면 되는거예요 근데 월별로 보는것은 10 서재가 필요하다 이랬을 때 어떻게 하냐 를 간단하게 보여드리자면 산천에 어플로 로 모든 잡을 이제 스케쥴링을 하구요 드디어 플로르 맨 처음에 써 반대로 볼 수 있는 환율 계산을 먼저 해줍니다 그 다음에 1백 계산을 하기 위해서 p 락으로 억 클러스터의 클러스터 주대 짜리 클러스트 만두 달 요청을 하구요 그 다음에 자 그다음 잡을 실행시킵니다 그러면은 일별로 매출 계산이 되겠죠 그 다음에 플린트 라고 통해서 다시 어 슬래브를 추가해 달라는 요청 합니다 별에 대해 sl 과 추가가 되구요 그 다음에 월별 계산을 하는 거죠 그러면 우리가 이제 클러스터의 큰거 뛰어서 괜히 남게 하거나 아니는 뭐 이 수압을 3 적절하게 못 해서 오래 걸린다 든지 그래서 우리가 아침에 바로 5 싶은데 정신까지 플러스 돌아야 된다든지 이런 문제를 막을 수 있습니다 그리고 아까 뭐 이제 잡 스케줄에 중요한 주제 중의 하나인 그 이 실패했을 때 배 그 업의 리포트도 기본 기능으로 불행이 되어있구요 슬랙 이나 아무것도 아닌 일로 잎을 그 후 원하는 게 굉장히 간단하게 되어있습니다 그래서 이런 실패 리프트도 따라갈 수 있습니다 저희 마지막 구조는 간단하게 보식 하자 뭐 이런식으로 되어 있구요 기본적으로 오든 분석 4 플러 에서 관리하고 있습니다 그리고 애플로 에서 플린트 락 을 통해서 센트라 글 통해 새 클러스터 관리를 하고 있구요 에어플로우 에서 20 어플로 에서 플린트 락 요청을 해서 이제 스파 클러스터를 구성하고 그리고 애플로 에서 잡 스케줄링을 해서 여러 잡을 실행시킵니다 이와중에 5 클러스터를 더 늘리거나 줄여 지면은 다시 옆으로 해서 플리터 를 정해서 슬래브를 축하 거나 드리거나 이런 기능을 쓸 수 있습니다 그래서 오늘 이야기를 간단하게 마무리 하겠습니다 일단 저의 맨 처음에 클라이언트로 직접 클러스터를 구성하고 그리고 데이터 접근해서 분석하는 식의 방법을 썼습니다 4 굉장히 느리고 그리고 일어나지 못했어요 그래서 여기다가 플린트 락 이라는 것 붙여서 빠르게 흘러서 뛸 수 있고 또한 원하는 대로 클러스터 사이즈를 조절할 수 있는 기능을 추가해서 탄력적으로 클러스터를 구축할 수 있었구요 여기다가 에어플로우 를 통해서 자 스케줄링 기능을 넣어서 일어나게 분석 스케쥴 할 수 있었습니다 그리고 필요한 때에 따라서 원하는 만큼 클러스터 깨어서 분석하는 기능을 구현했습니다 어 참고로 여기에 이제 어떤 샘플링 데이터 센터 클린 같은걸 통해서 실제 데이타를 받아서 그 데이터 l 크게 따라 프린트 락을 띠 은 띠어서 클러스터를 플러스 개수를 정하는 지능 같은것도 집 쳐주면 은 어그 게 차량에 따라서 부하 분산에 적절히 할 수 있습니다 4 마무리하겠습니다 우선 피에타 엔지니어링은 끄덕 수학은 3 많이 찾게 됩니다 오늘 괜찮은 거 같다고 섭 앞둔 뱉으며 는 나중에 구매합니다 꼭 항상 어부바 분사를 신경 써서 넣어 주셔야 되구요 그리고 탄력적인 클러스터 사이즈 조절은 인프라 전반의 효율을 극대화할 수 있습니다 그냥 남는 클러스터 벌을 서버를 남기지 않고 이제 모든 서브 실 수 있도록 흘러서 사이즈조절 하는 거였어 뭐 좀 더 효율적으로 쓸 수 있구요 그게 마지막으로 유연한 면서 스케쥴러를 스케쥴러 교 입을 하면은 1리 절반으로 줄어듭니다 제가 앞에 잠 마디 트라이브 집에 따로 만들고 셀 횡 g 4 따름 안되고 뭐 수절 변경 하는 것을 매번 하려는 정말 힘들겠죠 이건 아픈 스케쥴러를 주입하면 정말 우리가 빨리 일을 끝내고 최근 할 수 있는 사항이 됩니다 넥은 10가지 저의 발표를 마무리 하구요 마지막 저희 대타 팅 해서 사람을 뽑고 있습니다 어 저희 낳겠다 사이언스 인프라 팅 으로 되어 있고요 데이터 아싸 벳 엔지니어 머신은 엔지니어를 다 뽑고 있습니다 어 저희팀 만의 특징이라고 하면 요 저희는 분석과 와 인프라 담당자가 같이 일하고 있어요 그래서 오픈서 카 신분도 인프라 레 내가 깨어서 같이 뭐 노트를 만들고 싶다면 언제는 같이 사법을 하구요 그리고 베타 인프라 하시는 분도 옷보다 이번에는 인프라 이런거 가지고 분석하고 식당을 같이 분석하고 매일 아침에 같이 버파 사법 하면서 이라는 구조를 가지고 있습니다 관심있는 분들 어 전해 주시면 감사하겠습니다 애크미 거서 저희 발표를 마치겠습니다 감사합니다 [박수]